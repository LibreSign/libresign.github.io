openapi: 3.0.0
info:
  title: LibreSign API
  description: Libre digital signature app for Nextcloud.
  contact:
    name: Support
    url: 'https://github.com/LibreSign/libresign/issues'
  license:
    name: AGPLv3
    url: 'https://www.gnu.org/licenses/agpl-3.0.en.html'
  version: 2.2.2
servers:
  - description: local
    url: 'http://localhost/ocsapp/apps/libresign/api/v1'
tags:
  - name: account
    description: Account
  - name: identification documents
    description: Account identification documents
  - name: account signature elements
    description: Handle visible elements of account
  - name: sign
    description: Request and manage files to sign
  - name: sign validate
    description: Validate files
  - name: admin
    description: Admin settings
paths:
  /account/me:
    get:
      tags:
        - account
      summary: Who am I
      description: Validates API access data and returns the authenticated user's data.
      operationId: account#me
      security:
        - basicAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    allOf:
                      - $ref: '#/components/schemas/basicAccount'
                      - type: object
                        properties:
                          emailAddress:
                            type: string
                            format: email
                            description: Email of the person who owns the account
                            example: user@test.coop
                  settings:
                    $ref: '#/components/schemas/accountSettings'
                required:
                  - account
                  - settings
        '404':
          description: Invalid user or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Invalid user or password
                    example: Invalid user or password
                required:
                  - message
  /account/settings:
    patch:
      tags:
        - account
      summary: Update account settings
      operationId: account#updateSettings
      security:
        - basicAuth: []
      description: Update account settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: '+123456789'
                  description: Phone number
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    status: success
                    data:
                      userId: admin
                      phone: ''
                      message: Settings saved
                properties:
                  data:
                    type: object
                    required:
                      - userId
                      - phone
                      - message
                    properties:
                      userId:
                        type: string
                        minLength: 1
                      phone:
                        type: string
                        description: 'Phone number, empty if invalid, filled if valid.'
                      message:
                        type: string
                        minLength: 1
                required:
                  - status
                  - data
        '400':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error pessage
                    example: Invalid type
                required:
                  - message
  '/account/create/{uuid}':
    post:
      tags:
        - account
      summary: Create person account to sign a document
      description: Accounts can only be created to sign documents.
      operationId: account#createToSign
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the person who owns the account
                  example: user@test.coop
                password:
                  type: string
                  format: password
                  description: Password used to authenticate to Nextcloud
                  example: password
                signPassword:
                  type: string
                  format: password
                  description: Password used to sign a document
                  example: password
              required:
                - email
                - password
      responses:
        '200':
          description: 'Success! When you create a person, they are automatically authenticated.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 250
                  pdf:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL to view PDF
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                  filename:
                    type: string
                    example: filename
                    description: The name of file to sign
                  description:
                    type: string
                    nullable: true
                    description: Description for the person who will sign the document
                    example: 'As the company''s CEO, you must sign this contract'
                required:
                  - message
                  - action
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
                required:
                  - action
                  - message
  /account/files:
    post:
      tags:
        - identification documents
      summary: Save identification documents
      description: Save identification documents to account
      operationId: account#addFile
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        pattern: '[A-Z0-9_]+'
                        example: PASSPORT
                        default: IDENTIFICATION
                        description: The type code of this file to be attached to the account
                      name:
                        type: string
                        example: filename
                        description: The name of file
                      file:
                        $ref: '#/components/schemas/newFile'
      responses:
        '200':
          description: Documents have been attached to the account
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        file:
                          type: integer
                          description: 'Sequential identifier of the file that failed, starting from file zero'
                        type:
                          type: string
                          enum:
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                          example: Invalid type
    get:
      tags:
        - identification documents
      summary: List account documents of owner
      operationId: account#accountFileListToOwner
      description: List all account documents to owner of documents
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/basicAccount'
                        files:
                          type: array
                          description: Files associated with account
                          items:
                            $ref: '#/components/schemas/libresignFile'
                  pagination:
                    $ref: '#/components/schemas/pagination'
    delete:
      summary: Delete identification document
      operationId: account#deleteFile
      security:
        - basicAuth: []
      description: Delete identification document of an account
      tags:
        - identification documents
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nodeId:
                  type: integer
                  minimum: 1
                  description: NodeId of identification document
                  example: 1
              required:
                - nodeId
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Visible element deleted
                    example: Visible element deleted
                required:
                  - message
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error pessage
                    example: This isn't your element
                required:
                  - message
  /account/files/approval/list:
    get:
      tags:
        - identification documents
      summary: List all account files - require permission to approve
      description: Identification document files can be associated with each account profile. Here you can list all these files and your status. The authenticated user need have permission to approve these documents.
      operationId: account#accountFileListToApproval
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - name: approved
          in: query
          schema:
            type: string
            enum:
              - 'yes'
              - 'no'
              - all
            default: 'no'
          description: Approved files
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      allOf:
                        - type: object
                          properties:
                            file_type:
                              $ref: '#/components/schemas/fileType'
                            account:
                              $ref: '#/components/schemas/basicAccount'
                            file:
                              $ref: '#/components/schemas/libresignFile'
                  pagination:
                    $ref: '#/components/schemas/pagination'
  /account/signature:
    post:
      tags:
        - account signature elements
      summary: Generates signature key
      description: Generates the personal signature key
      operationId: account#signatureGenerate
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signPassword:
                  type: string
                  format: password
                  description: Password to pfx file
                  example: password
      responses:
        '200':
          description: Folder where the pfx file was saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:
                    type: string
                    description: Folder where the pfx file was saved
                    example: /LibreSign
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Password to sign is mandatory
                    example: Password to sign is mandatory
  /account/signature/elements:
    post:
      tags:
        - account signature elements
      summary: Profile visible elements
      description: Add visible elements to profile. Signature or initials
      operationId: account#createSignatureElement
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              description: Collection of visible signature elements
              type: object
              properties:
                elements:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/signatureElement'
                      - type: object
                        properties:
                          uid:
                            type: string
                            description: The account login to associate this element
                            example: jhondoe
                          starred:
                            type: boolean
                            default: false
                            description: The main signature
      responses:
        '200':
          description: Visible document saved with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                required:
                  - message
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error pessage
                    example: Invalid file
                required:
                  - message
    get:
      tags:
        - account signature elements
      summary: Retrieve visible elements
      description: List all elements visible to user profile
      operationId: account#getSignatureElements
      security:
        - basicAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/signatureElement'
                    - type: object
                      properties:
                        id:
                          type: integer
                          minimum: 1
                      required:
                        - id
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: Elements not found
  '/account/signature/elements/{elementId}':
    get:
      tags:
        - account signature elements
      summary: Retrieve visible elements
      description: Get a specific visible element from user profile
      operationId: account#getSignatureElement
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/elementIdParam'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/signatureElement'
                    - type: object
                      properties:
                        id:
                          type: integer
                          minimum: 1
                      required:
                        - id
    patch:
      tags:
        - account signature elements
      summary: Edit visible element
      description: Edit elements visible to user profile
      operationId: account#patchSignatureElement
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/elementIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signatureElement'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Visible element upated
                    example: Visible element upated
                required:
                  - message
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error pessage
                    example: Invalid type
                required:
                  - message
    delete:
      tags:
        - account signature elements
      summary: Delete visible element
      description: Delete visible element of user
      operationId: account#deleteSignatureElement
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/elementIdParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Visible element deleted
                    example: Visible element deleted
                required:
                  - message
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error pessage
                    example: This isn't your element
                required:
                  - message
  /request-signature:
    post:
      tags:
        - sign
      summary: Request signature
      description: Request that a file be signed by a group of people
      operationId: signFile#requestSign
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/libresignFileStatus'
                - type: object
                  properties:
                    name:
                      type: string
                      example: filename
                      description: The name of file to sign
                    file:
                      $ref: '#/components/schemas/newFile'
                    users:
                      type: array
                      description: Collection of users who must sign the document
                      items:
                        $ref: '#/components/schemas/signAccount'
                    callback:
                      type: string
                      description: URL that will receive a POST after the document is signed
                      example: 'http://app.test.coop/callback_webhook'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      fileId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      file:
                        type: string
                        description: URL to download signed file
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      url:
                        type: string
                        description: URL to view PDF
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      name:
                        type: string
                        example: filename
                        description: The name of file to sign
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
                      status:
                        type: integer
                        enum:
                          - 0
                          - 1
                          - 2
                        description: |
                          Numeric code of status * 0 - no signers * 1 - signed * 2 - pending
                        example: 1
                      statusText:
                        type: string
                        description: Translated text of status
                        example: able to sign
                      request_date:
                        type: string
                        format: date-time
                        pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                        nullable: true
                        description: Date the file was requested to be signed
                        example: '2021-12-31 22:45:50'
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - success
                                - info
                                - warning
                                - danger
                              description: Type of message
                            message:
                              type: string
                              description: Text of message
                      requested_by:
                        $ref: '#/components/schemas/basicAccount'
                      settings:
                        $ref: '#/components/schemas/signSettings'
                      signers:
                        type: array
                        description: Collection of users who must sign the document
                        items:
                          type: object
                          description: Person who will sign
                          properties:
                            email:
                              type: string
                              format: email
                              description: Unique email to identify user
                              example: user@test.coop
                            me:
                              type: boolean
                              description: It's me?
                              example: true
                            sign_uuid:
                              type: string
                              format: uuid
                              description: 'Received from sign request, only returned when me=true'
                            displayName:
                              type: string
                              nullable: true
                              description: Persons name
                              example: John Doe
                            signed:
                              type: string
                              description: 'Signing date, when signed'
                              example: February 28, 2024, 11:17:43 PM
                              nullable: true
                            request_sign_date:
                              type: string
                              format: date-time
                              pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                              description: Date the signature was requested
                              example: '2021-12-31 22:45:50'
                            identifyMethods:
                              type: array
                              items:
                                type: object
                                properties:
                                  method:
                                    type: string
                                    example: account
                                    description: The identify method name
                                  value:
                                    type: string
                                    example: signer1
                                    description: The value that identify the signer in the authentication method
                                  mandatory:
                                    type: integer
                                    example: 1
                                    description: is this sign method mandatory?
                            visibleElements:
                              type: array
                              description: Visible elements on document
                              items:
                                allOf:
                                  - $ref: '#/components/schemas/signatureElement'
                                  - $ref: '#/components/schemas/elementCoordinate'
                                  - type: object
                                    properties:
                                      signRequestId:
                                        type: string
                                        nullable: true
                                        description: Representative ID of relation between file and user
                                        example: johndoe
                                      elementId:
                                        type: integer
                                        minimum: 1
                                        example: 1
                                    required:
                                      - elementId
                            uid:
                              type: string
                              nullable: true
                              description: Nextcloud user id of who requested the file to be signed when the person created account.
                              example: johndoe
                            description:
                              type: string
                              nullable: true
                              description: Description that will be displayed to the person
                              example: 'As the company''s CEO, you must sign this contract'
                            identify:
                              type: string
                              nullable: true
                              default: nextcloud
                              example: nextcloud
                              description: 'When is requested to a person to sign a file, is necessary identify what is the identification method. The identification method is used to define how will be the sign flow.'
                              enum:
                                - nextcloud
                                - email-link
                                - email-token
                                - sms-token
                            signRequestId:
                              type: integer
                              description: ID of relation between file and user. Each relation between file and user has an ID that is returned on validation endpoints.
                              example: request_sign_date
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - User 0 needs an email address
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response.
                    example: 200
    patch:
      tags:
        - sign
      summary: Updates signatures data
      description: Is necessary to inform the UUID of the file and a list of people
      operationId: signFile#updateSign
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/libresignFileStatus'
                - type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                      description: Received from sign request
                    file:
                      $ref: '#/components/schemas/fileId'
                    visibleElements:
                      type: array
                      description: Visible elements on document
                      items:
                        not:
                          required:
                            - coordinates
                        allOf:
                          - $ref: '#/components/schemas/pdfVisibleElement'
                          - type: object
                            properties:
                              elementId:
                                type: integer
                                minimum: 1
                                example: 1
                            required:
                              - elementId
                    users:
                      type: array
                      description: Collection of users who must sign the document
                      items:
                        $ref: '#/components/schemas/signAccount'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      fileId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      file:
                        type: string
                        description: URL to download signed file
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      url:
                        type: string
                        description: URL to view PDF
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      name:
                        type: string
                        example: filename
                        description: The name of file to sign
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
                      status:
                        type: integer
                        enum:
                          - 0
                          - 1
                          - 2
                        description: |
                          Numeric code of status * 0 - no signers * 1 - signed * 2 - pending
                        example: 1
                      statusText:
                        type: string
                        description: Translated text of status
                        example: able to sign
                      request_date:
                        type: string
                        format: date-time
                        pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                        nullable: true
                        description: Date the file was requested to be signed
                        example: '2021-12-31 22:45:50'
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - success
                                - info
                                - warning
                                - danger
                              description: Type of message
                            message:
                              type: string
                              description: Text of message
                      requested_by:
                        $ref: '#/components/schemas/basicAccount'
                      settings:
                        $ref: '#/components/schemas/signSettings'
                      signers:
                        type: array
                        description: Collection of users who must sign the document
                        items:
                          type: object
                          description: Person who will sign
                          properties:
                            email:
                              type: string
                              format: email
                              description: Unique email to identify user
                              example: user@test.coop
                            me:
                              type: boolean
                              description: It's me?
                              example: true
                            sign_uuid:
                              type: string
                              format: uuid
                              description: 'Received from sign request, only returned when me=true'
                            displayName:
                              type: string
                              nullable: true
                              description: Persons name
                              example: John Doe
                            signed:
                              type: string
                              description: 'Signing date, when signed'
                              example: February 28, 2024, 11:17:43 PM
                              nullable: true
                            request_sign_date:
                              type: string
                              format: date-time
                              pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                              description: Date the signature was requested
                              example: '2021-12-31 22:45:50'
                            identifyMethods:
                              type: array
                              items:
                                type: object
                                properties:
                                  method:
                                    type: string
                                    example: account
                                    description: The identify method name
                                  value:
                                    type: string
                                    example: signer1
                                    description: The value that identify the signer in the authentication method
                                  mandatory:
                                    type: integer
                                    example: 1
                                    description: is this sign method mandatory?
                            visibleElements:
                              type: array
                              description: Visible elements on document
                              items:
                                allOf:
                                  - $ref: '#/components/schemas/signatureElement'
                                  - $ref: '#/components/schemas/elementCoordinate'
                                  - type: object
                                    properties:
                                      signRequestId:
                                        type: string
                                        nullable: true
                                        description: Representative ID of relation between file and user
                                        example: johndoe
                                      elementId:
                                        type: integer
                                        minimum: 1
                                        example: 1
                                    required:
                                      - elementId
                            uid:
                              type: string
                              nullable: true
                              description: Nextcloud user id of who requested the file to be signed when the person created account.
                              example: johndoe
                            description:
                              type: string
                              nullable: true
                              description: Description that will be displayed to the person
                              example: 'As the company''s CEO, you must sign this contract'
                            identify:
                              type: string
                              nullable: true
                              default: nextcloud
                              example: nextcloud
                              description: 'When is requested to a person to sign a file, is necessary identify what is the identification method. The identification method is used to define how will be the sign flow.'
                              enum:
                                - nextcloud
                                - email-link
                                - email-token
                                - sms-token
                            signRequestId:
                              type: integer
                              description: ID of relation between file and user. Each relation between file and user has an ID that is returned on validation endpoints.
                              example: request_sign_date
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - User 0 needs an email address
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response.
                    example: 200
  '/sign/uuid/{uuid}':
    post:
      tags:
        - sign
      summary: Sign a file using user file UUUID
      description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      operationId: signFile#signUsingUuid
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/uuidParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  format: password
                  example: password
                identifyValue:
                  type: string
                  format: password
                  example: secretPassword
                elements:
                  type: array
                  description: 'Visible elements. Not mandatory, only needed when the document has visible elements and the user has many visible elements associated to profile and don''t has favorited visible element to use.'
                  items:
                    type: object
                    description: Relation between document visible element and visible element of user. This will be used to put on document.
                    properties:
                      documentElementId:
                        type: integer
                        description: Id of visible element on document
                      profileElementId:
                        type: integer
                        description: Id of visible element on document
                    required:
                      - documentElementId
                      - profileElementId
              required:
                - method
                - identifyValue
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  file:
                    type: object
                    description: LibreSign file
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: LibreSign UUID
                  action:
                    type: integer
                    enum:
                      - 100
                      - 150
                      - 200
                      - 250
                      - 300
                      - 350
                      - 400
                    description: |-
                      Numeric code representing what action should be taken with the response

                      ACTION_REDIRECT = 100
                      ACTION_CREATE_USER = 150
                      ACTION_DO_NOTHING = 200
                      ACTION_SIGN = 250
                      ACTION_SHOW_ERROR = 300
                      ACTION_SIGNED = 350
                      ACTION_CREATE_SIGNATURE_PASSWORD = 400
                    example: 200
                  message:
                    type: string
                    enum:
                      - File signed
                    example: File signed
                required:
                  - action
                  - message
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - File already signed by you
                  redirect:
                    type: string
                    description: Destination url
                required:
                  - action
                  - errors
  '/sign/file_id/{fileId}':
    post:
      tags:
        - sign
      summary: Sign a file using Nextcloud node id
      description: Sign a file using Nextcloud node id.
      operationId: signFile#signUsingFileid
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  format: password
                  example: password
                identifyValue:
                  type: string
                  format: password
                  example: secretPassword
                elements:
                  type: array
                  description: 'Visible elements. Not mandatory, only needed when the document has visible elements and the user has many visible elements associated to profile and don''t has favorited visible element to use.'
                  items:
                    type: object
                    description: Relation between document visible element and visible element of user. This will be used to put on document.
                    properties:
                      documentElementId:
                        type: integer
                        description: Id of visible element on document
                      profileElementId:
                        type: integer
                        description: Id of visible element on document
                    required:
                      - documentElementId
                      - profileElementId
              required:
                - method
                - identifyValue
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  file:
                    type: object
                    description: LibreSign file
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: LibreSign UUID
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    example: File signed
                required:
                  - action
                  - message
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - File already signed by you
                required:
                  - action
                  - errors
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: You can only request exclusion as any sign
      operationId: signFile#deleteAllSignRequestUsingFileId
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: Description of the failure that occurred
                    items:
                      type: string
                    example:
                      - UUID not found
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response.
                    example: 200
  '/sign/file_id/{fileId}/{signRequestId}':
    delete:
      tags:
        - sign
      summary: Delete sign request of specific user
      description: You can only request exclusion as any sign
      operationId: signFile#deleteOneSignRequestUsingFileId
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
        - name: signRequestId
          in: path
          description: ID of relation between file and user.
          required: true
          schema:
            type: integer
            description: Each relation between file and user has an ID that is returned on validation endpoints.
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - Signer not associated to this file
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response.
                    example: 200
  '/sign/uuid/{uuid}/token':
    post:
      tags:
        - account
      summary: Request sign code
      description: Request code to sign file using uuid
      operationId: signFile#getTokenUsingUuid
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/uuidParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: Signer not associated to this file
  '/sign/file_id/{fileId}/token':
    post:
      tags:
        - account
      summary: Request sign code
      description: Request code to sign file using fileId
      operationId: signFile#getTokenUsingFileId
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: Signer not associated to this file
  /file:
    post:
      tags:
        - sign
      summary: Send a file
      description: Send a new file to Nextcloud and return the fileId to request to sign usign fileId
      operationId: File#send
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: filename
                  description: The name of file to sign
                file:
                  oneOf:
                    - type: object
                      properties:
                        url:
                          type: string
                          description: URL of file
                          example: 'https://github.com/LibreSign/libresign/raw/main/tests/fixtures/small_valid.pdf'
                    - type: object
                      properties:
                        base64:
                          type: string
                          format: base64
                          description: base64 of PDF file content
                          example: dGVzdA==
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  name:
                    type: string
                    example: filename
                    description: The name of file to sign
                  id:
                    type: integer
                    description: Node id of a Nextcloud file
                    example: 2312
                  etag:
                    type: string
                  path:
                    type: string
                  type:
                    type: string
                required:
                  - message
                  - name
                  - id
                  - etag
                  - path
                  - type
  /file/list:
    get:
      tags:
        - sign
      summary: List all LibreSign files
      description: List all LibreSign files returning all informations about files
      operationId: File#list
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/libresignFile'
                  pagination:
                    $ref: '#/components/schemas/pagination'
  '/file/validate':
    get:
      tags:
        - sign validate
      summary: Validate a file using UUID
      description: Validate a file using file UUID returning file data.
      operationId: File#validateUuid
      parameters:
        - name: uuid
          in: query
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: UUID user file identifier. The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
        - name: fileId
          in: query
          description: Node id of a Nextcloud file
          required: true
          schema:
            type: string
            description: Node id of a Nextcloud file.
            example: '564'
        - name: path
          in: query
          description: path of a Nextcloud file
          required: true
          schema:
            type: string
            description: path of a Nextcloud file.
            example: /path/of/file.pdf
        - name: url
          in: query
          description: URL of file
          schema:
            type: string
            description: URL of file
            example: 'https://github.com/LibreSign/libresign/raw/main/tests/fixtures/small_valid.pdf'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/libresignFileStatus'
                  - type: object
                    properties:
                      name:
                        type: string
                        example: filename
                      file:
                        type: string
                        description: URL to download signed file
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      fileId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: Received from sign request
                      request_date:
                        type: string
                        format: date-time
                        pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                        nullable: true
                        description: Date the file was requested to be signed
                        example: '2021-12-31 22:45:50'
                      requested_by:
                        $ref: '#/components/schemas/basicAccount'
                      pages:
                        type: array
                        description: |-
                          List with all pages on image format.
                          This property only will be returned when the query param format=image
                        items:
                          $ref: '#/components/schemas/pdfPage'
                      signers:
                        type: array
                        items:
                          type: object
                          properties:
                            signed:
                              type: string
                              description: 'Signing date, when signed'
                              example: February 28, 2024, 11:17:43 PM
                              nullable: true
                            request_sign_date:
                              type: string
                              format: date-time
                              pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                              description: Date the signature was requested
                              example: '2021-12-31 22:45:50'
                            displayName:
                              type: string
                              description: The person display name
                              nullable: true
                              example: John
                            me:
                              type: boolean
                              description: It's me?
                              example: true
                            sign_uuid:
                              type: string
                              format: uuid
                              description: 'Received from sign request, only returned when me=true'
                            identifyMethods:
                              type: array
                              items:
                                type: object
                                properties:
                                  method:
                                    type: string
                                    example: account
                                    description: The identify method name
                                  value:
                                    type: string
                                    example: signer1
                                    description: The value that identify the signer in the authentication method
                                  mandatory:
                                    type: integer
                                    example: 1
                                    description: is this sign method mandatory?
                            email:
                              type: string
                              format: email
                              description: Unique email to identify signer. This property will only exist when it is a request made by the person who requested the document to be signed.
                              example: user@test.coop
                            uid:
                              type: string
                              description: Nextcloud user id of who requested the file to be signed.
                              example: johndoe
                            description:
                              type: string
                              nullable: true
                              description: Description that will be displayed to the person
                              example: 'As the company''s CEO, you must sign this contract'
                            signRequestId:
                              type: integer
                              description: Relation between file and user
                              example: 1
                          required:
                            - signed
                            - me
                            - signRequestId
                      settings:
                        $ref: '#/components/schemas/signSettings'
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - success
                                - info
                                - warning
                                - danger
                              description: Type of message
                            message:
                              type: string
                              description: Text of message
                required:
                  - name
                  - file
                  - status
                  - settings
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                required:
                  - settings
                  - errors
                  - action
  '/file/validate/uuid/{uuid}':
    get:
      tags:
        - sign validate
      summary: Validate a file using UUID
      description: Validate a file using file UUID returning file data.
      operationId: File#validateUuid
      parameters:
        - $ref: '#/components/parameters/uuidParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/libresignFileStatus'
                  - type: object
                    properties:
                      name:
                        type: string
                        example: filename
                      file:
                        type: string
                        description: URL to download signed file
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      url:
                        type: string
                        description: URL to view PDF
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: Received from sign request
                      request_date:
                        type: string
                        format: date-time
                        pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                        nullable: true
                        description: Date the file was requested to be signed
                        example: '2021-12-31 22:45:50'
                      requested_by:
                        $ref: '#/components/schemas/basicAccount'
                      pages:
                        type: array
                        description: |-
                          List with all pages on image format.
                          This property only will be returned when the query param format=image
                        items:
                          $ref: '#/components/schemas/pdfPage'
                      signers:
                        type: array
                        items:
                          type: object
                          properties:
                            signed:
                              type: string
                              description: 'Signing date, when signed'
                              example: February 28, 2024, 11:17:43 PM
                              nullable: true
                            request_sign_date:
                              type: string
                              format: date-time
                              pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                              description: Date the signature was requested
                              example: '2021-12-31 22:45:50'
                            displayName:
                              type: string
                              description: The person display name
                              nullable: true
                              example: John
                            me:
                              type: boolean
                              description: It's me?
                              example: true
                            sign_uuid:
                              type: string
                              format: uuid
                              description: 'Received from sign request, only returned when me=true'
                            identifyMethods:
                              type: array
                              items:
                                type: object
                                properties:
                                  method:
                                    type: string
                                    example: account
                                    description: The identify method name
                                  value:
                                    type: string
                                    example: signer1
                                    description: The value that identify the signer in the authentication method
                                  mandatory:
                                    type: integer
                                    example: 1
                                    description: is this sign method mandatory?
                            email:
                              type: string
                              format: email
                              description: Unique email to identify signer. This property will only exist when it is a request made by the person who requested the document to be signed.
                              example: user@test.coop
                            uid:
                              type: string
                              description: Nextcloud user id of who requested the file to be signed.
                              example: johndoe
                            description:
                              type: string
                              nullable: true
                              description: Description that will be displayed to the person
                              example: 'As the company''s CEO, you must sign this contract'
                            signRequestId:
                              type: integer
                              description: Relation between file and user
                            visibleElements:
                              type: array
                              description: Visible elements on document
                              items:
                                allOf:
                                  - $ref: '#/components/schemas/signatureElement'
                                  - $ref: '#/components/schemas/elementCoordinate'
                                  - type: object
                                    properties:
                                      signRequestId:
                                        type: string
                                        nullable: true
                                        description: Representative ID of relation between file and user
                                        example: johndoe
                                      elementId:
                                        type: integer
                                        minimum: 1
                                        example: 1
                                    required:
                                      - elementId
                              example: 1
                          required:
                            - signed
                            - me
                            - signRequestId
                      settings:
                        $ref: '#/components/schemas/signSettings'
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - success
                                - info
                                - warning
                                - danger
                              description: Type of message
                            message:
                              type: string
                              description: Text of message
                required:
                  - name
                  - file
                  - status
                  - settings
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                required:
                  - settings
                  - errors
                  - action
  '/file/validate/file_id/{fileId}':
    get:
      tags:
        - sign validate
      summary: Validate a file using Nextcloud node id
      description: Validate a file using Nextcloud node id.
      operationId: File#validateFileId
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
      responses:
        '200':
          description: Success!
          content:
            image/png:
              schema:
                allOf:
                  - $ref: '#/components/schemas/libresignFileStatus'
                  - type: object
                    properties:
                      name:
                        type: string
                        example: filename
                      file:
                        type: string
                        description: URL to download signed file
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      url:
                        type: string
                        description: URL to view PDF
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                      fileId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: Received from sign request
                      request_date:
                        type: string
                        format: date-time
                        pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                        nullable: true
                        description: Date the file was requested to be signed
                        example: '2021-12-31 22:45:50'
                      pages:
                        type: array
                        description: |-
                          List with all pages on image format.
                          This property only will be returned when the query param format=image
                        items:
                          $ref: '#/components/schemas/pdfPage'
                      signers:
                        type: array
                        items:
                          type: object
                          properties:
                            signed:
                              type: string
                              description: 'Signing date, when signed'
                              example: February 28, 2024, 11:17:43 PM
                              nullable: true
                            request_sign_date:
                              type: string
                              format: date-time
                              pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                              description: Date the signature was requested
                              example: '2021-12-31 22:45:50'
                            displayName:
                              type: string
                              description: The person display name
                              nullable: true
                              example: John
                            me:
                              type: boolean
                              description: It's me?
                              example: true
                            sign_uuid:
                              type: string
                              format: uuid
                              description: 'Received from sign request, only returned when me=true'
                            identifyMethods:
                              type: array
                              items:
                                type: object
                                properties:
                                  method:
                                    type: string
                                    example: account
                                    description: The identify method name
                                  value:
                                    type: string
                                    example: signer1
                                    description: The value that identify the signer in the authentication method
                                  mandatory:
                                    type: integer
                                    example: 1
                                    description: is this sign method mandatory?
                            email:
                              type: string
                              format: email
                              description: Unique email to identify signer. This property will only exist when it is a request made by the person who requested the document to be signed.
                              example: user@test.coop
                            uid:
                              type: string
                              description: Nextcloud user id of who requested the file to be signed.
                              example: johndoe
                            description:
                              type: string
                              nullable: true
                              description: Description that will be displayed to the person
                              example: 'As the company''s CEO, you must sign this contract'
                            signRequestId:
                              type: integer
                              description: ID of relation between file and user. Each relation between file and user has an ID that is returned on validation endpoints.
                              example: 1
                            visibleElements:
                              type: array
                              description: Visible elements on document
                              items:
                                allOf:
                                  - $ref: '#/components/schemas/signatureElement'
                                  - $ref: '#/components/schemas/elementCoordinate'
                                  - type: object
                                    properties:
                                      uid:
                                        type: string
                                        description: Nextcloud user id to assign this visible element.
                                        example: johndoe
                                        nullable: true
                                      elementId:
                                        type: integer
                                        minimum: 1
                                        example: 1
                                    required:
                                      - elementId
                          required:
                            - signed
                            - me
                            - signRequestId
                      settings:
                        $ref: '#/components/schemas/signSettings'
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - success
                                - info
                                - warning
                                - danger
                              description: Type of message
                            message:
                              type: string
                              description: Text of message
                required:
                  - name
                  - file
                  - status
                  - settings
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                required:
                  - settings
                  - errors
                  - action
  '/file/page/{uuid}/{page}':
    get:
      tags:
        - sign
      summary: Returns the image of a pdf page
      description: Returns the image of a pdf page
      operationId: File#getPage
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/uuidParam'
        - name: page
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The number of page to return
      responses:
        '200':
          description: The image of page
          content:
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: Request failed
  '/file-element/{uuid}':
    post:
      tags:
        - sign
      summary: Create visible element
      description: Create visible element of a specific file
      operationId: File#post
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/uuidParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pdfVisibleElement'
      responses:
        '200':
          description: Visible document saved with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileElementId:
                    type: integer
                    description: 'Representative ID of relation between file, signRequest and the visible element on pdf'
                required:
                  - fileElementId
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error pessage
                    example: Invalid file
                required:
                  - message
  '/file-element/{uuid}/{elementId}':
    patch:
      tags:
        - sign
      summary: Update visible element
      description: Update visible element of a specific file
      operationId: File#patch
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/uuidParam'
        - $ref: '#/components/parameters/elementIdParam'
      requestBody:
        content:
          application/json:
            schema:
              not:
                required:
                  - coordinates
              allOf:
                - $ref: '#/components/schemas/pdfVisibleElement'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileElementId:
                    type: integer
                    description: 'Representative ID of relation between file, signRequest and the visible element on pdf'
                required:
                  - fileElementId
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error pessage
                    example: Invalid type
                required:
                  - message
    delete:
      tags:
        - sign
      summary: Delete visible element
      description: Delete visible element of a specific file
      operationId: File#delete
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/uuidParam'
        - $ref: '#/components/parameters/elementIdParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: Element not associated to this file
  /notify/signers:
    post:
      tags:
        - sign
      summary: Notify signers of a file
      description: Notify signers of a file
      operationId: notify#signers
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fileId:
                  type: integer
                  description: Node id of a Nextcloud file
                  example: 2312
                signers:
                  type: array
                  description: Collection of signers
                  items:
                    type: object
                    description: Signer who will notify
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify signer
                        example: user@test.coop
                    required:
                      - email
              required:
                - fileId
                - signers
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                          example: Invalid type
  /setting/has-root-cert:
    get:
      tags:
        - admin
      summary: Has root certificate
      description: Checks whether the root certificate has been configured by checking the Nextcloud configuration table to see if the root certificate settings have been saved.
      operationId: setting#hasRootCert
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasRootCert:
                    type: boolean
                    example: true
  /admin/download-binaries:
    get:
      tags:
        - admin
      summary: Download binaries
      description: Download all binaries required to work
      operationId: admin#downloadBinaries
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
  /admin/download-status:
    get:
      tags:
        - admin
      summary: Status download binaries
      description: Progress status of download all binaries required to work
      operationId: admin#downloadStatus
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: List of resources with the progress status
                  properties:
                    java:
                      description: name of resource and the install status progress
                      type: integer
                      minimum: 0
                      maximum: 100
  /admin/configure-check:
    get:
      tags:
        - admin
      summary: Configure check
      description: Verify if all required to work fine is ok.
      operationId: admin#configureCheck
      security:
        - basicAuth: []
      responses:
        '200':
          description: List of settings and status
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: Check list
                  properties:
                    success:
                      type: array
                      description: List of success messages
                      items:
                        allOf:
                          - $ref: '#/components/schemas/configureCheck'
                    errors:
                      type: array
                      description: List of error messages
                      items:
                        allOf:
                          - $ref: '#/components/schemas/configureCheck'
  /admin/certificate:
    get:
      tags:
        - admin
      summary: Get root certificate
      description: Get root certificate settings
      operationId: admin#loadCertificate
      security:
        - basicAuth: []
      responses:
        '200':
          description: The certificate settings
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/certificate-cfssl'
                  - $ref: '#/components/schemas/certificate-openssl'
  /admin/certificate/cfssl:
    post:
      tags:
        - admin
      summary: Create root certificate
      description: Create root certificate and enable execution of CFSSL
      operationId: admin#generateCertificate
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/certificate-cfssl'
      responses:
        '200':
          description: 'If the response is successful, it is because the settings have been saved and the root certificate has been generated.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/certificate-cfssl'
                required:
                  - data
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    description: List of failures that occurred
                required:
                  - message
                example:
                  message:
                    - parameter 'cfsslUri' is required!
  /admin/certificate/openssl:
    post:
      tags:
        - admin
      summary: Create root certificate
      description: Create root certificate and enable execution of OpenSSL
      operationId: admin#generateCertificate
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/certificate-openssl'
      responses:
        '200':
          description: 'If the response is successful, it is because the settings have been saved and the root certificate has been generated.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/certificate-openssl'
                required:
                  - data
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    description: List of failures that occurred
                required:
                  - message
                example:
                  message:
                    - parameter 'cfsslUri' is required!
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    pageParam:
      name: page
      in: query
      schema:
        type: integer
        minimum: 0
      description: The number of page to return
    limitParam:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        default: 15
      description: The number of page to return
    fileIdParam:
      name: fileId
      in: path
      description: Node id of a Nextcloud file
      required: true
      schema:
        type: string
        description: Node id of a Nextcloud file.
        example: '564'
    uuidParam:
      name: uuid
      in: path
      description: File UUID
      required: true
      schema:
        type: string
        format: uuid
        description: UUID user file identifier. The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
    elementIdParam:
      name: elementId
      in: path
      description: ID of visible element
      required: true
      schema:
        type: integer
        description: Each element has an ID that is returned on validation endpoints.
  schemas:
    basicAccount:
      type: object
      properties:
        displayName:
          type: string
          description: Who requested that the file be signed?
          nullable: true
          example: John Doe
        uid:
          type: string
          description: Nextcloud user id of who requested the file to be signed.
          example: johndoe
    signAccount:
      allOf:
        - $ref: '#/components/schemas/basicAccount'
        - type: object
          properties:
            email:
              type: string
              format: email
              description: Unique email to identify user. Use this or uid.
              example: user@test.coop
            description:
              type: string
              description: Description that will be displayed to the person
              example: 'As the company''s CEO, you must sign this contract'
            identify:
              type: object
              properties:
                email:
                  type: string
                  example: signer1
                  description: The email of signer
                account:
                  type: string
                  example: signer1
                  description: The account name of signer
    accountSettings:
      type: object
      properties:
        canRequestSign:
          type: boolean
          description: 'Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.'
          example: true
        hasSignatureFile:
          type: boolean
          description: Has signature file.
          example: true
        canPreviewPageAsImage:
          type: boolean
          description: Can preview page as image
          example: true
    signSettings:
      type: object
      properties:
        canRequestSign:
          type: boolean
          description: 'Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.'
          example: true
        hasSignatureFile:
          type: boolean
          description: Has signature file.
          example: true
        canPreviewPageAsImage:
          type: boolean
          description: Can preview page as image
          example: true
        canSign:
          type: boolean
          description: Can request sign this file
          example: true
        signerFileUuid:
          type: string
          format: uuid
          description: UUID of relation between user and file to sign. Only will be returned if the user that did the request need sign the file.
          nullable: true
        phoneNumber:
          description: User phone number when defined.
          type: string
        signMethod:
          type: string
          description: Defined method to sign file
          example: password
        needIdentificationDocuments:
          type: boolean
          description: need identification documents
          nullable: true
          example: true
        identificationDocumentsWaitingApproval:
          type: boolean
          description: identification documents waiting approval
          nullable: true
          example: true
    libresignFile:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        name:
          type: string
          example: filename
          description: The name of file to sign
        callback:
          type: string
          description: URL that will receive a POST after the document is signed
          nullable: true
          example: 'http://app.test.coop/callback_webhook'
        status:
          type: integer
          enum:
            - 0
            - 1
            - 2
          description: |
            Numeric code of status * 0 - no signers * 1 - signed * 2 - pending
          example: 1
        status_text:
          type: string
          description: Translated text of status
          example: able to sign
        request_date:
          type: string
          format: date-time
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
          nullable: true
          description: Date the file was requested to be signed
          example: '2021-12-31 22:45:50'
        requested_by:
          $ref: '#/components/schemas/basicAccount'
        file:
          type: object
          nullable: true
          properties:
            type:
              type: string
              enum:
                - pdf
              description: Type of file
              example: pdf
            url:
              type: string
              description: URL to view PDF
              example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
            nodeId:
              type: integer
              description: Node id of a Nextcloud file
              example: 2312
            path:
              type: string
              description: Path of a Nextcloud file
              example: /path/here/filename.pdf
          required:
            - type
        signers:
          type: array
          description: Collection of users who must sign the document
          items:
            type: object
            description: Person who will sign
            properties:
              email:
                type: string
                format: email
                description: Unique email to identify user
                example: user@test.coop
              me:
                type: boolean
                description: It's me?
                example: true
              sign_uuid:
                type: string
                format: uuid
                description: 'Received from sign request, only returned when me=true'
              displayName:
                type: string
                nullable: true
                description: Persons name
                example: John Doe
              uid:
                type: string
                nullable: true
                description: Nextcloud user id of who requested the file to be signed when the person created account.
                example: johndoe
              description:
                type: string
                nullable: true
                description: Description that will be displayed to the person
                example: 'As the company''s CEO, you must sign this contract'
              signed:
                type: string
                format: date-time
                nullable: true
                description: Date the file was signed
                example: February 28, 2024, 11:17:43 PM
              request_sign_date:
                type: string
                format: date-time
                pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                description: Date the signature was requested
                example: '2021-12-31 22:45:50'
              identify:
                type: string
                nullable: true
                default: nextcloud
                example: nextcloud
                description: 'When is requested to a person to sign a file, is necessary identify what is the identification method. The identification method is used to define how will be the sign flow.'
                enum:
                  - nextcloud
                  - email-link
                  - email-token
                  - sms-token
              signRequestId:
                type: integer
                description: ID of relation between file and user. Each relation between file and user has an ID that is returned on validation endpoints.
                example: 1
              visibleElements:
                type: array
                description: Visible elements on document
                items:
                  allOf:
                    - $ref: '#/components/schemas/signatureElement'
                    - $ref: '#/components/schemas/elementCoordinate'
                    - type: object
                      properties:
                        signRequestId:
                          type: string
                          nullable: true
                          description: Representative ID of relation between file and user
                          example: johndoe
                        elementId:
                          type: integer
                          minimum: 1
                          example: 1
                      required:
                        - elementId
            required:
              - email
              - request_sign_date
      required:
        - uuid
        - name
        - status
    fileId:
      type: object
      description: File object.
      properties:
        fileId:
          type: integer
          description: Node id of a Nextcloud file
          example: 2312
      example:
        fileId: 2312
    newFile:
      type: object
      description: File object. Use one of these types
      oneOf:
        - type: object
          properties:
            url:
              type: string
              description: URL of file
              example: 'https://github.com/LibreSign/libresign/raw/main/tests/fixtures/small_valid.pdf'
        - $ref: '#/components/schemas/fileId'
        - type: object
          properties:
            base64:
              type: string
              format: base64
              description: base64 of PDF file content
              example: dGVzdA==
      x-examples:
        example-url:
          url: 'https://github.com/LibreSign/libresign/raw/main/tests/fixtures/small_valid.pdf'
    fileType:
      type: object
      description: Type of files
      properties:
        type:
          type: string
          description: Constant defining the type of file
          example: IDENTIFICATION
        name:
          type: string
          description: The name of file
          example: Identification Document
        description:
          type: string
          description: Description of file
          example: Identification Document
    pagination:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          description: Total number of records
          example: 300
        current:
          type: string
          minimum: 1
          nullable: true
          description: URL of current page
          example: /file/list?page=2&length=15
        next:
          type: string
          nullable: true
          description: URL of next page
          example: /file/list?page=3
        prev:
          type: string
          nullable: true
          description: URL of previous page
          example: /file/list?page=1
        last:
          type: string
          nullable: true
          description: URL of last page
          example: /file/list?page=20
        first:
          type: string
          nullable: true
          description: URL of first page
          example: /file/list?page=1
      required:
        - total
        - current
        - next
        - prev
        - last
        - first
    signatureElement:
      description: Visible elements to associate with the document
      type: object
      properties:
        type:
          type: string
          minLength: 1
          enum:
            - signature
            - initial
            - date
            - datetime
            - text
          example: signature
        file:
          $ref: '#/components/schemas/newFile'
      required:
        - type
    signatureMetadataElement:
      description: Metadata of visible elements to associate with the document
      type: object
      example:
        metadata:
          text: Lorem ipsum
      properties:
        metadata:
          type: object
          properties:
            text:
              type: string
              minLength: 1
            dateFormat:
              type: string
              minLength: 1
    elementCoordinate:
      description: Coortinates of a visible element on PDF
      type: object
      x-examples:
        example-1:
          coordinates:
            page: 0
            urx: 0
            ury: 0
            llx: 0
            lly: 0
        example-2:
          coordinates:
            page: 0
            width: 0
            height: 0
            left: 0
            top: 0
      properties:
        coordinates:
          type: object
          properties:
            page:
              type: integer
              example: 0
              minimum: 0
              default: 1
            width:
              type: integer
              description: width of visible signature
              minimum: 0
              example: 0
              default: 0
            height:
              type: integer
              description: height of visible signature
              minimum: 0
              example: 0
              default: 0
            left:
              type: integer
              description: left position of visible signature
              minimum: 0
              example: 0
              default: 0
            top:
              type: integer
              description: top position of visible signature
              minimum: 0
              example: 0
              default: 0
            urx:
              type: integer
              description: upper right corner postion on X-axe of visible signature
              minimum: 0
              example: 0
              default: 0
            ury:
              type: integer
              description: upper right corner postion on Y-axe of visible signature
              minimum: 0
              example: 0
              default: 0
            llx:
              type: integer
              description: lower left corner postion on X-axe of visible signature
              minimum: 0
              example: 0
              default: 0
            lly:
              type: integer
              description: lower left corner postion on Y-axe of visible signature
              minimum: 0
              example: 0
              default: 0
      required:
        - coordinates
    pdfVisibleElement:
      description: Coortinates of a visible element on PDF
      type: object
      x-examples:
        Example of new element:
          type: signature
          metadata:
            text: Lorem ipsum
          coordinates:
            page: 0
            urx: 0
            ury: 0
            llx: 0
            lly: 0
          signRequestId: 123
      not:
        required:
          - coordinates
      allOf:
        - $ref: '#/components/schemas/signatureMetadataElement'
        - $ref: '#/components/schemas/elementCoordinate'
        - type: object
          properties:
            type:
              type: string
              minLength: 1
              enum:
                - signature
                - initial
                - date
                - datetime
                - text
              example: signature
            signRequestId:
              type: integer
              description: 'Representative ID of relation between file, signRequest and the visible element on pdf'
              example: 123
          required:
            - signRequestId
    pdfPage:
      type: object
      description: Metadata of PDF page on image format
      properties:
        url:
          type: string
          description: URL of page
          example: 'http://cloud.test.coop/apps/libresign/img/46d30465-ae11-484b-aad5-327249a1e8ef/page/1'
        resolution:
          type: object
          required:
            - w
            - h
          properties:
            w:
              type: number
              description: Width in pixels of page
              example: 200.5
            h:
              type: number
              description: Height in pixels of page
              example: 200.5
      required:
        - url
        - resolution
    libresignFileStatus:
      title: LibreSign file status
      type: object
      properties:
        statusText:
          type: string
          description: Status human readdable
          example: able to sign
        status:
          type: integer
          description: |-
            Numeric code of signature status

            STATUS_DRAFT = 0
            STATUS_ABLE_TO_SIGN = 1
            STATUS_PARTIAL_SIGNED = 2
            STATUS_SIGNED = 3
            STATUS_DELETED = 4
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          default: 1
    configureCheck:
      title: Configure check result
      description: Returned to each return of configure check
      type: object
      properties:
        status:
          type: string
          description: Status human readdable
          enum:
            - error
            - success
        message:
          type: string
          description: Text of message
          example: Invalid type
        resource:
          type: string
          description: Type of checked resource
          example: java
        tip:
          type: string
          description: Returned when the status is error. Is a tip to solve the problem.
          example: install java
    certificate-cfssl:
      type: object
      properties:
        rootCert:
          type: object
          description: Data to generate root certificate
          properties:
            commonName:
              type: string
              description: Common name
              example: CommonName
            names:
              type: array
              description: Custom cert name options
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Short identifier
                    example: C
                  value:
                    type: string
                    description: Value of ID
                    example: BR
        cfsslUri:
          type: string
          description: CFSSL service URL
          example: 'http://cfssl:8888/api/v1/cfssl/'
        configPath:
          type: string
          description: The path that Nextcloud should save the CFSSL configuration files for and that the CFSSL service needs to read to generate the root certificate.
          example: /cfssl/
        generated:
          type: boolean
          description: Is CFSSL certificate generated?
      required:
        - rootCert
        - cfsslUri
        - configPath
    certificate-openssl:
      type: object
      properties:
        rootCert:
          type: object
          description: Data to generate root certificate
          properties:
            commonName:
              type: string
              description: Common name
              example: CommonName
            names:
              type: array
              description: Custom cert name options
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Short identifier
                    example: C
                  value:
                    type: string
                    description: Value of ID
                    example: BR
        configPath:
          type: string
          description: The path that Nextcloud should save the OpenSSL root certificate.
          example: /openssl/
        generated:
          type: boolean
          description: Is OpenSSL certificate generated?
      required:
        - rootCert
        - configPath
