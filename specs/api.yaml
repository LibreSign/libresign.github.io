openapi: 3.1.0
info:
  title: LibreSign API
  description: Libre digital signature app for Nextcloud.
  contact:
    name: Support
    url: 'https://github.com/LibreSign/libresign/issues'
  license:
    name: AGPLv3
    url: 'https://www.gnu.org/licenses/agpl-3.0.en.html'
  version: 2.2.2
servers:
  - description: local
    url: 'http://localhost/apps/libresign/api/0.1'
tags:
  - name: account
    description: Account
  - name: sign
    description: Sign and validate files
  - name: admin
    description: Admin settings
paths:
  /webhook/me:
    get:
      tags:
        - account
      summary: Who am I
      description: replaced by /account/me
      operationId: accountDeprecated#me
      deprecated: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/basicAccount'
                  settings:
                    $ref: '#/components/schemas/accountSettings'
                required:
                  - account
                  - settings
        '404':
          description: Invalid user or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Invalid user or password
                    example: Invalid user or password
                required:
                  - message
      security:
        - basicAuth: []
  /webhook/register:
    post:
      tags:
        - sign
      summary: Request signature
      description: replaced by /account/register
      operationId: signFileDeprecated#requestSign
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: filename
                  description: The name of file to sign
                file:
                  $ref: '#/components/schemas/file'
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
                callback:
                  type: string
                  description: URL that will receive a POST after the document is signed
                  example: 'http://app.test.coop/callback_webhook'
              required:
                - name
                - file
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
      security:
        - basicAuth: []
    patch:
      tags:
        - sign
      summary: Updates signatures data
      description: Is necessary to inform the UUID of the file and a list of people
      operationId: signFileDeprecated#updateSign
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
      security:
        - basicAuth: []
  /webhook/register/signature:
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: replaced by /sign/register/signature
      operationId: signFileDeprecated#removeSign
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                users:
                  type: array
                  description: Collection of persons
                  items:
                    type: object
                    description: Person who will deleted
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: UUID not found
      security:
        - basicAuth: []
  /signature/has-root-cert:
    get:
      tags:
        - admin
      summary: Has root certificate
      description: Replaced by /setting/has-root-cert
      operationId: settingDeprecated#hasRootCert
      deprecated: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasRootCert:
                    type: boolean
                    example: true
      security:
        - basicAuth: []
  /account/me:
    get:
      tags:
        - account
      summary: Who am I
      description: Validates API access data and returns the authenticated user's data.
      operationId: account#me
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/basicAccount'
                  settings:
                    $ref: '#/components/schemas/accountSettings'
                required:
                  - account
                  - settings
        '404':
          description: Invalid user or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Invalid user or password
                    example: Invalid user or password
                required:
                  - message
      security:
        - basicAuth: []
  '/account/create/{uuid}':
    post:
      tags:
        - account
      summary: Create person account to sign a document
      description: Accounts can only be created to sign documents.
      operationId: account#createToSign
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the person who owns the account
                  example: user@test.coop
                password:
                  type: string
                  format: password
                  description: Password used to authenticate to Nextcloud
                  example: Ultr4S3cretP3ssword!
                signPassword:
                  type: string
                  format: password
                  description: Password used to sign a document
                  example: Ultr4S3cretP3ssword!
              required:
                - email
                - password
      responses:
        '200':
          description: 'Success! When you create a person, they are automatically authenticated.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success message
                    example: Success
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 250
                  pdf:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL to view PDF
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                  filename:
                    type: string
                    example: filename
                    description: The name of file to sign
                  description:
                    type: string
                    nullable: true
                    description: Description for the person who will sign the document
                    example: 'As the company''s CEO, you must sign this contract'
                required:
                  - success
                  - message
                  - action
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
                required:
                  - success
                  - action
                  - message
  /account/files:
    post:
      tags:
        - account
      summary: Save identification documents
      description: Save identification documents to account
      operationId: account#addFiles
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        pattern: '[A-Z0-9_]+'
                        example: PASSPORT
                        default: IDENTIFICATION
                        description: The type code of this file to be attached to the account
                      file:
                        $ref: '#/components/schemas/file'
      responses:
        '200':
          description: Documents have been attached to the account
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                required:
                  - success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Oh no!
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        file:
                          type: integer
                          description: 'Sequential identifier of the file that failed, starting from file zero'
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                          example: Invalid type
  /account/files/approval/list:
    get:
      tags:
        - sign
      summary: List all account files
      description: Identification document files can be associated with each account profile. Here you can list all these files and your status.
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - name: approved
          in: query
          schema:
            type: string
            enum:
              - 'yes'
              - 'no'
              - all
            default: 'no'
          description: Approved files
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/basicAccount'
                        files:
                          type: array
                          description: Files associated with account
                          items:
                            $ref: '#/components/schemas/libresignFile'
                  pagination:
                    $ref: '#/components/schemas/pagination'
      security:
        - basicAuth: []
  /account/signature:
    post:
      tags:
        - account
      summary: Generates signature key
      description: Generates the personal signature key
      operationId: account#signatureGenerate
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signPassword:
                  type: string
                  format: password
                  description: Password to pfx file
                  example: MySecretP4ssword!
      responses:
        '200':
          description: Folder where the pfx file was saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  signature:
                    type: string
                    description: Folder where the pfx file was saved
                    example: /LibreSign
                required:
                  - success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Password to sign is mandatory
                    example: Password to sign is mandatory
                  success:
                    type: boolean
                    description: Beep! Failure on generate certificate.
                required:
                  - success
  /sign/register:
    post:
      tags:
        - sign
      summary: Request signature
      description: Request that a file be signed by a group of people
      operationId: signFile#requestSign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: filename
                  description: The name of file to sign
                file:
                  $ref: '#/components/schemas/file'
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
                callback:
                  type: string
                  description: URL that will receive a POST after the document is signed
                  example: 'http://app.test.coop/callback_webhook'
              required:
                - name
                - file
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
      security:
        - basicAuth: []
    patch:
      tags:
        - sign
      summary: Updates signatures data
      description: Is necessary to inform the UUID of the file and a list of people
      operationId: signFile#updateSign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                file:
                  type: object
                  description: File object.
                  properties:
                    fileId:
                      type: integer
                      description: Node id of a Nextcloud file
                      example: 2312
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
      security:
        - basicAuth: []
  /sign/register/signature:
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: You can only request exclusion as any sign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                file:
                  type: object
                  description: File object.
                  properties:
                    fileId:
                      type: integer
                      description: Node id of a Nextcloud file
                      example: 2312
                users:
                  type: array
                  description: Collection of persons
                  items:
                    type: object
                    description: Person who will deleted
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: UUID not found
      security:
        - basicAuth: []
  '/sign/uuid/{uuid}':
    post:
      tags:
        - sign
      summary: Sign a file using user file UUUID
      description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      operationId: signFile#signUsingUuid
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: UUID user file identifier. The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  example: Ultr4S3cretP3ssword!
                '':
                  type: string
              required:
                - password
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  file:
                    type: object
                    description: LibreSign file
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: LibreSign UUID
                  action:
                    type: integer
                    enum:
                      - 100
                      - 150
                      - 200
                      - 250
                      - 300
                      - 350
                      - 400
                    description: |-
                      Numeric code representing what action should be taken with the response

                      ACTION_REDIRECT = 100
                      ACTION_CREATE_USER = 150
                      ACTION_DO_NOTHING = 200
                      ACTION_SIGN = 250
                      ACTION_SHOW_ERROR = 300
                      ACTION_SIGNED = 350
                      ACTION_CREATE_SIGNATURE_PASSWORD = 400
                    example: 200
                  message:
                    type: string
                    enum:
                      - File signed
                    example: File signed
                required:
                  - success
                  - action
                  - message
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - File already signed by you
                required:
                  - success
                  - action
                  - errors
      security:
        - basicAuth: []
  '/sign/file_id/{fileId}':
    post:
      tags:
        - sign
      summary: Sign a file using Nextcloud node id
      description: Sign a file using Nextcloud node id.
      operationId: signFile#signUsingFileid
      parameters:
        - name: fileId
          in: path
          description: Node id of a Nextcloud file
          required: true
          schema:
            type: string
            description: Node id of a Nextcloud file.
            example: '564'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  example: Ultr4S3cretP3ssword!
              required:
                - password
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  file:
                    type: object
                    description: LibreSign file
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: LibreSign UUID
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    example: File signed
                required:
                  - success
                  - action
                  - message
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - File already signed by you
                required:
                  - success
                  - action
                  - errors
      security:
        - basicAuth: []
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: You can only request exclusion as any sign
      operationId: signFile#deleteAllSignRequestUsingFileId
      parameters:
        - name: fileId
          in: path
          description: Node id of a Nextcloud file
          required: true
          schema:
            type: string
            description: Node id of a Nextcloud file.
            example: '564'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: UUID not found
      security:
        - basicAuth: []
  '/sign/file_id/{fileId}/{signatureId}':
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: You can only request exclusion as any sign
      operationId: signFile#deleteOneSignRequestUsingFileId
      parameters:
        - name: fileId
          in: path
          description: Node id of a Nextcloud file
          required: true
          schema:
            type: string
            description: Node id of a Nextcloud file.
            example: '564'
        - name: signatureId
          in: path
          description: ID of signature
          required: true
          schema:
            type: integer
            description: Each signature has an ID that is returned on validation endpoints.
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: Signer not associated to this file
      security:
        - basicAuth: []
  /file/list:
    get:
      tags:
        - sign
      summary: List all LibreSign files
      description: List all LibreSign files returning all informations about files
      operationId: libreSignFile#list
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/libresignFile'
                  pagination:
                    $ref: '#/components/schemas/pagination'
      security:
        - basicAuth: []
  '/file/validate/uuid/{uuid}':
    get:
      tags:
        - sign
      summary: Validate a file using UUID
      description: Validate a file using file UUID returning file data.
      operationId: libreSignFile#validateUuid
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  name:
                    type: string
                    example: filename
                  file:
                    type: string
                    description: URL to download signed file
                    example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                  signers:
                    type: array
                    items:
                      type: object
                      properties:
                        signed:
                          type: string
                          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                          nullable: true
                          description: 'Signing date, when signed'
                          example: '2021-12-31 22:45:50'
                        displayName:
                          type: string
                          description: The person display name
                          example: John
                        fullName:
                          type: string
                          nullable: true
                          description: The person full name
                          example: John Doe
                        me:
                          type: boolean
                          description: It's me?
                          example: true
                        email:
                          type: string
                          format: email
                          description: Unique email to identify signer. This property will only exist when it is a request made by the person who requested the document to be signed.
                          example: user@test.coop
                        signatureId:
                          type: integer
                          description: ID of signature. Each signature has an ID that is returned on validation endpoints.
                          example: 1
                      required:
                        - signed
                        - displayName
                        - fullName
                        - me
                        - signatureId
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                required:
                  - success
                  - name
                  - file
                  - settings
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - settings
                  - errors
                  - action
  '/file/validate/file_id/{fileId}':
    get:
      tags:
        - sign
      summary: Validate a file using Nextcloud node id
      description: Validate a file using Nextcloud node id.
      operationId: libreSignFile#validateFileId
      parameters:
        - name: fileId
          in: path
          description: Nextcloud node id
          required: true
          schema:
            type: integer
            description: Nextcloud node id.
            example: 564
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  name:
                    type: string
                    example: filename
                  file:
                    type: string
                    description: URL to download signed file
                    example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                  signers:
                    type: array
                    items:
                      type: object
                      properties:
                        signed:
                          type: string
                          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                          nullable: true
                          description: 'Signing date, when signed'
                          example: '2021-12-31 22:45:50'
                        displayName:
                          type: string
                          description: The person display name
                          example: John
                        fullName:
                          type: string
                          nullable: true
                          description: The person full name
                          example: John Doe
                        me:
                          type: boolean
                          description: It's me?
                          example: true
                        email:
                          type: string
                          format: email
                          description: Unique email to identify signer. This property will only exist when it is a request made by the person who requested the document to be signed.
                          example: user@test.coop
                        signatureId:
                          type: integer
                          description: ID of signature. Each signature has an ID that is returned on validation endpoints.
                          example: 1
                      required:
                        - signed
                        - displayName
                        - fullName
                        - me
                        - signatureId
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                required:
                  - success
                  - name
                  - file
                  - settings
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - settings
                  - errors
                  - action
  /notify/signers:
    post:
      tags:
        - sign
      summary: Notify signers of a file
      description: Notify signers of a file
      operationId: notify#signers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fileId:
                  type: integer
                  description: Node id of a Nextcloud file
                  example: 2312
                signers:
                  type: array
                  description: Collection of signers
                  items:
                    type: object
                    description: Signer who will notify
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify signer
                        example: user@test.coop
                    required:
                      - email
              required:
                - fileId
                - signers
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Oh no!
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                          example: Invalid type
  /setting/has-root-cert:
    get:
      tags:
        - admin
      summary: Has root certificate
      description: Checks whether the root certificate has been configured by checking the Nextcloud configuration table to see if the root certificate settings have been saved.
      operationId: setting#hasRootCert
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasRootCert:
                    type: boolean
                    example: true
      security:
        - basicAuth: []
  /admin/certificate:
    post:
      tags:
        - admin
      summary: Create root certificate
      description: Create root certificate and enable execution of CFSSL
      operationId: admin#generateCertificate
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commonName:
                  type: string
                  description: Common name
                  example: CommonName
                country:
                  type: string
                  description: Country name
                  example: Brazil
                organization:
                  type: string
                  description: Organization
                  example: Organization
                organizationUnit:
                  type: string
                  description: Organization unit
                  example: organizationUnit
                cfsslUri:
                  type: string
                  description: CFSSL service URL
                  example: 'http://cfssl:8888/api/v1/cfssl/'
                configPath:
                  type: string
                  description: The path that Nextcloud should save the CFSSL configuration files for and that the CFSSL service needs to read to generate the root certificate.
                  example: /cfssl/
              required:
                - commonName
                - country
                - organization
                - organizationUnit
                - cfsslUri
                - configPath
      responses:
        '200':
          description: 'If the response is successful, it is because the settings have been saved and the root certificate has been generated.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: CFSSL server is up?
                required:
                  - success
                example:
                  success: true
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: CFSSL server is up?
                  message:
                    type: array
                    description: List of failures that occurred
                required:
                  - success
                  - message
                example:
                  success: false
                  message:
                    - parameter 'cfsslUri' is required!
    get:
      tags:
        - admin
      summary: Get root certificate
      description: Get root certificate settings
      operationId: admin#loadCertificate
      security:
        - basicAuth: []
      responses:
        '200':
          description: The certificate settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  commonName:
                    type: string
                    description: Common name
                    example: CommonName
                  country:
                    type: string
                    description: Country name
                    example: Brazil
                  organization:
                    type: string
                    description: Organization
                    example: Organization
                  organizationUnit:
                    type: string
                    description: Organization unit
                    example: organizationUnit
                  cfsslUri:
                    type: string
                    description: CFSSL service URL
                    example: 'http://cfssl:8888/api/v1/cfssl/'
                  configPath:
                    type: string
                    description: The path that Nextcloud should save the CFSSL configuration files for and that the CFSSL service needs to read to generate the root certificate.
                    example: /cfssl/
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    pageParam:
      name: page
      in: query
      schema:
        type: integer
        minimum: 0
      description: The number of page to return
    limitParam:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        default: 15
      description: The number of page to return
  schemas:
    basicAccount:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
          description: Who requested that the file be signed?
          example: John Doe
        uid:
          type: string
          nullable: true
          description: Nextcloud user id of who requested the file to be signed.
          example: johndoe
    accountSettings:
      type: object
      properties:
        canRequestSign:
          type: boolean
          description: 'Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.'
          example: true
        hasSignatureFile:
          type: boolean
          description: Has signature file.
          example: true
    signSettings:
      type: object
      properties:
        canRequestSign:
          type: boolean
          description: 'Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.'
          example: true
        hasSignatureFile:
          type: boolean
          description: Has signature file.
          example: true
        canSign:
          type: boolean
          description: Can request sign this file
          example: true
    libresignFile:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        name:
          type: string
          example: filename
          description: The name of file to sign
        callback:
          type: string
          description: URL that will receive a POST after the document is signed
          nullable: true
          example: 'http://app.test.coop/callback_webhook'
        status:
          type: string
          enum:
            - signed
            - pending
            - disabled
            - no signers
        status_date:
          type: string
          format: date-time
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
          nullable: true
          description: Last status date
          example: '2021-12-31 22:45:50'
        request_date:
          type: string
          format: date-time
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
          nullable: true
          description: Date the file was requested to be signed
          example: '2021-12-31 22:45:50'
        requested_by:
          $ref: '#/components/schemas/basicAccount'
        file:
          type: object
          nullable: true
          properties:
            type:
              type: string
              enum:
                - pdf
              description: Type of file
              example: pdf
            url:
              type: string
              description: URL to view PDF
              example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
            nodeId:
              type: integer
              description: Node id of a Nextcloud file
              example: 2312
          required:
            - type
        signers:
          type: array
          description: Collection of users who must sign the document
          items:
            type: object
            description: Person who will sign
            properties:
              email:
                type: string
                format: email
                description: Unique email to identify user
                example: user@test.coop
              me:
                type: boolean
                description: It's me?
                example: true
              displayName:
                type: string
                nullable: true
                description: Persons name
                example: John Doe
              uid:
                type: string
                nullable: true
                description: Nextcloud user id of who requested the file to be signed when the person created account.
                example: johndoe
              description:
                type: string
                nullable: true
                description: Description that will be displayed to the person
                example: 'As the company''s CEO, you must sign this contract'
              sign_date:
                type: string
                format: date-time
                pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                nullable: true
                description: Date the file was signed
                example: '2021-12-31 22:45:50'
              request_sign_date:
                type: string
                format: date-time
                pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                description: Date the signature was requested
                example: '2021-12-31 22:45:50'
              signatureId:
                type: integer
                description: ID of signature. Each signature has an ID that is returned on validation endpoints.
                example: 1
            required:
              - email
              - request_sign_date
      required:
        - uuid
        - name
        - status
    file:
      type: object
      description: File object. Use one of these types
      properties:
        url:
          type: string
          description: URL of file
          example: 'http://cloud.test.coop/s/ry384r6t384/download/test_small.pdf'
        fileId:
          type: integer
          description: Node id of a Nextcloud file
          example: 2312
        base64:
          type: string
          format: base64
          description: base64 of PDF file content
          example: dGVzdA==
      example:
        url: 'http://cloud.test.coop/s/ry384r6t384/download/test_small.pdf'
    pagination:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          description: Total number of records
          example: 300
        current:
          type: string
          minimum: 1
          nullable: true
          description: URL of current page
          example: /file/list?page=2&length=15
        next:
          type: string
          nullable: true
          description: URL of next page
          example: /file/list?page=3
        prev:
          type: string
          nullable: true
          description: URL of previous page
          example: /file/list?page=1
        last:
          type: string
          nullable: true
          description: URL of last page
          example: /file/list?page=20
        first:
          type: string
          nullable: true
          description: URL of first page
          example: /file/list?page=1
      required:
        - total
        - current
        - next
        - prev
        - last
        - first
