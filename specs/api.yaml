openapi: 3.0.1
info:
  title: LibreSign API
  description: "Libre digital signature app for Nextcloud."
  contact:
    name: "Support"
    url: "https://github.com/LibreSign/libresign/issues"
  license:
    name: "AGPLv3"
    url: "https://www.gnu.org/licenses/agpl-3.0.en.html"
  version: 2.2.2
tags:
- name: webhook
  description: Everything about webhook
- name: sign
  description: Sign and validate files
- name: admin
  description: Admin settings

paths:
  /webhook/me:
    get:
      tags:
        - webhook
      summary: Who am I
      description: Validates API access data and returns the authenticated user's data.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  uid:
                    type: string
                    example: username
                required:
                  - uid
        404:
          description: Invalid user or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Invalid user or password
                    example: Invalid user or password
                required:
                  - message
      security:
        - basicAuth: []
  /webhook/register:
    post:
      tags:
        - webhook
      summary: Request signature
      description: Request that a file be signed by a group of people
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: filename
                  description: The name of file to sign
                file:
                  type: object
                  description: File to sign. Use one of these types
                  properties:
                    url:
                      type: string
                      description: URL of file
                      example: http://cloud.test.coop/s/ry384r6t384/download/test_small.pdf
                    fileId:
                      type: integer
                      description: Node id of a Nextcloud file
                      example: 2312
                    base64:
                      type: string
                      format: base64
                      description: Base54 of PDF file content
                      example: dGVzdA==
                  example:
                    url: http://cloud.test.coop/s/ry384r6t384/download/test_small.pdf
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      display_name:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: As the company's CEO, you must sign this contract
                    required:
                      - email
                callback:
                  type: string
                  description: URL that will receive a POST after the document is signed
                  example: http://app.test.coop/callback_webhook
              required:
                - name
                - file
                - users
        required: true
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: 'File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.'
                        example: 46d30465-ae11-484b-aad5-327249a1e8ef
        422:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
      security:
        - basicAuth: []
    patch:
      tags:
        - webhook
      summary: Updates signatures data
      description: Is necessary to inform the UUID of the file and a list of people
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                  example: 46d30465-ae11-484b-aad5-327249a1e8ef
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      display_name:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: As the company's CEO, you must sign this contract
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
                        example: 46d30465-ae11-484b-aad5-327249a1e8ef
        422:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
      security:
        - basicAuth: []
  /webhook/register/signature:
    delete:
      tags:
        - webhook
      summary: Delete sign request
      description: You can only request exclusion as any sign
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                  example: 46d30465-ae11-484b-aad5-327249a1e8ef
                users:
                  type: array
                  description: Collection of persons
                  items:
                    type: object
                    description: Person who will deleted
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        422:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: UUID not found
      security:
        - basicAuth: []
  /sign:
    post:
      tags:
        - sign
      summary: Sign a file
      description: Request sign a file.
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                inputFilePath:
                  type: string
                outputFolderPath:
                  type: string
                certificatePath:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - inputFilePath
                - outputFolderPath
                - certificatePath
                - password
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileSigned:
                    type: string
        422:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    description: Numeric code representing what action should be taken with the response
                    type: string
                  errors:
                    type: string
      security:
        - basicAuth: []
  /sign/uuid/{uuid}:
    post:
      tags:
        - sign
      summary: Sign a file using user file UUUID
      description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: UUID user file identifier. The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
            example: 46d30465-ae11-484b-aad5-327249a1e8ef
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  example: Ultr4S3cretP3ssword!
              required:
                - password
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  action:
                    type: integer
                    enum: [350]
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    enum: [File signed]
                    example: File signed
                required:
                  - success
                  - action
                  - message
        422:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                        type: string
                    example:
                      - "File already signed by you"
                required:
                  - success
                  - action
                  - errors
      security:
        - basicAuth: []
  /sign/file_id/{fileId}:
    post:
      tags:
        - sign
      summary: Sign a file using Nextcloud node id
      description: Sign a file using Nextcloud node id.
      parameters:
        - name: fileId
          in: path
          description: Node id of a Nextcloud file
          required: true
          schema:
            type: string
            format: uuid
            description: Node id of a Nextcloud file.
            example: 564
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  example: Ultr4S3cretP3ssword!
              required:
                - password
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    example: File signed
                required:
                  - success
                  - action
                  - message
        422:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                        type: string
                    example:
                      - "File already signed by you"
                required:
                  - success
                  - action
                  - errors
      security:
        - basicAuth: []
  /file/validate/uuid/{uuid}:
    get:
      tags:
        - sign
      summary: Validate a file using UUID
      description: Validate a file using file UUID returning file data.
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
            example: 46d30465-ae11-484b-aad5-327249a1e8ef
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  name:
                    type: string
                    example: filename
                  file:
                    type: string
                    description: URL to download signed file
                    example: http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef
                  signatures:
                    type: array
                    items:
                      type: object
                      properties:
                        signed:
                          type: string
                          pattern: \d{4}-\d{2}-\d{2} \d{2}:\d{2}\d{2}
                          nullable: true
                          description: Signing date, when signed
                        displayName:
                          type: string
                          description: The person display name
                          example: John
                        fullName:
                          type: string
                          nullable: true
                          description: The person full name
                          example: John Doe
                        me:
                          type: boolean
                          description: It's me?
                          example: true
                      required:
                        - signed
                        - displayName
                        - fullName
                        - me
                  settings:
                    type: object
                    properties:
                      canRequestSign:
                        type: boolean
                        description: Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.
                        example: true
                      canSign:
                        type: boolean
                        description: Can request sign this file
                        example: true
                required:
                  - success
                  - name
                  - file
                  - settings
        404:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  settings:
                    type: object
                    properties:
                      canRequestSign:
                        type: boolean
                        description: Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.
                        example: true
                      canSign:
                        type: boolean
                        enum:
                          - false
                        description: Can request sign this file
                        example: false
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - settings
                  - errors
                  - action
  /file/validate/file_id/{fileId}:
    get:
      tags:
        - sign
      summary: Validate a file using Nextcloud node id
      description: Validate a file using Nextcloud node id.
      parameters:
        - name: fileId
          in: path
          description: Nextcloud node id
          required: true
          schema:
            type: integer
            description: Nextcloud node id.
            example: 564
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  name:
                    type: string
                    example: filename
                  file:
                    type: string
                    description: URL to download signed file
                    example: http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef
                  signatures:
                    type: array
                    items:
                      type: object
                      properties:
                        signed:
                          type: string
                          pattern: \d{4}-\d{2}-\d{2} \d{2}:\d{2}\d{2}
                          nullable: true
                          description: Signing date, when signed
                        displayName:
                          type: string
                          description: The person display name
                          example: John
                        fullName:
                          type: string
                          nullable: true
                          description: The person full name
                          example: John Doe
                        me:
                          type: boolean
                          description: It's me?
                          example: true
                      required:
                        - signed
                        - displayName
                        - fullName
                        - me
                  settings:
                    type: object
                    properties:
                      canRequestSign:
                        type: boolean
                        description: Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.
                        example: true
                      canSign:
                        type: boolean
                        description: Can request sign this file
                        example: true
                required:
                  - success
                  - name
                  - file
                  - settings
        404:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  settings:
                    type: object
                    properties:
                      canRequestSign:
                        type: boolean
                        description: Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.
                        example: true
                      canSign:
                        type: boolean
                        enum:
                          - false
                        description: Can request sign this file
                        example: false
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - settings
                  - errors
                  - action
  /signature/has-root-cert:
    get:
      tags:
        - sign
      summary: Has root certificate
      description: Checks whether the root certificate has been configured by checking the Nextcloud configuration table to see if the root certificate settings have been saved.
      responses:
        200:
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasRootCert:
                    type: boolean
                    example: true
      security:
        - basicAuth: []
  /account/create/{uuid}:
    post:
      tags:
        - sign
      summary: Create person account to sign a document
      description: Accounts can only be created to sign documents.
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
            example: 46d30465-ae11-484b-aad5-327249a1e8ef
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the person who owns the account
                  example: user@test.coop
                password:
                  type: string
                  format: password
                  description: Password used to authenticate to Nextcloud
                  example: Ultr4S3cretP3ssword!
                signPassword:
                  type: string
                  format: password
                  description: Password used to sign a document
                  example: Ultr4S3cretP3ssword!
              required:
                - email
                - password
                - signPassword
      responses:
        200:
          description: Success! When you create a person, they are automatically authenticated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success message
                    example: Success
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 250
                  pdf:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL to view PDF
                        example: http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef
                  filename:
                    type: string
                    example: filename
                    description: The name of file to sign
                  description:
                    type: string
                    nullable: true
                    description: Description for the person who will sign the document
                    example: As the company's CEO, you must sign this contract
                required:
                  - success
                  - message
                  - action
        422:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
                required:
                  - success
                  - action
                  - message
  /account/signature:
    post:
      tags:
        - sign
      summary: Generates signature key
      description: Generates the personal signature key
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signPassword:
                  type: string
                  format: password
                  description: Password to pfx file
                  example: MySecretP4ssword!
      responses:
        200:
          description: Folder where the pfx file was saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  signature:
                    type: string
                    description: Folder where the pfx file was saved
                    example: /LibreSign
                required:
                  - success
        401:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Password to sign is mandatory
                    example: Password to sign is mandatory
                  success:
                    type: boolean
                    description: Beep! Failure on generate certificate.
                required:
                  - success
  /admin/certificate:
    post:
      tags:
        - admin
      summary: Create root certificate
      description: Create root certificate and enable execution of CFSSL
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commonName:
                  type: string
                  description: Common name
                  example: CommonName
                country:
                  type: string
                  description: Country name
                  example: Brazil
                organization:
                  type: string
                  description: Organization
                  example: Organization
                organizationUnit:
                  type: string
                  description: Organization unit
                  example: organizationUnit
                cfsslUri:
                  type: string
                  description: CFSSL service URL
                  example: http://cfssl:8888/api/v1/cfssl/
                configPath:
                  type: string
                  description: The path that Nextcloud should save the CFSSL configuration files for and that the CFSSL service needs to read to generate the root certificate.
                  example: /cfssl/
              required:
                - commonName
                - country
                - organization
                - organizationUnit
                - cfsslUri
                - configPath
      responses:
        200:
          description: If the response is successful, it is because the settings have been saved and the root certificate has been generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: CFSSL server is up?
                required:
                  - success
                example:
                  success: true
        401:
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: CFSSL server is up?
                  message:
                    type: array
                    description: List of failures that occurred
                required:
                  - success
                  - message
                example:
                  success: false
                  message: parameter 'cfsslUri' is required!
    get:
      tags:
        - admin
      summary: Get root certificate
      description: Get root certificate settings
      security:
        - basicAuth: []
      responses:
        200:
          description: The certificate settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  commonName:
                    type: string
                    description: Common name
                    example: CommonName
                  country:
                    type: string
                    description: Country name
                    example: Brazil
                  organization:
                    type: string
                    description: Organization
                    example: Organization
                  organizationUnit:
                    type: string
                    description: Organization unit
                    example: organizationUnit
                  cfsslUri:
                    type: string
                    description: CFSSL service URL
                    example: http://cfssl:8888/api/v1/cfssl/
                  configPath:
                    type: string
                    description: The path that Nextcloud should save the CFSSL configuration files for and that the CFSSL service needs to read to generate the root certificate.
                    example: /cfssl/
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
