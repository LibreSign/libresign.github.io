openapi: 3.0.0
info:
  title: LibreSign API
  description: Libre digital signature app for Nextcloud.
  contact:
    name: Support
    url: 'https://github.com/LibreSign/libresign/issues'
  license:
    name: AGPLv3
    url: 'https://www.gnu.org/licenses/agpl-3.0.en.html'
  version: 2.2.2
servers:
  - description: local
    url: 'http://localhost/apps/libresign/api/0.1'
tags:
  - name: account
    description: Account
  - name: sign
    description: Sign and validate files
  - name: admin
    description: Admin settings
paths:
  /webhook/me:
    get:
      tags:
        - account
      summary: Who am I
      description: replaced by /account/me
      operationId: accountDeprecated#me
      security:
        - basicAuth: []
      deprecated: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/basicAccount'
                  settings:
                    $ref: '#/components/schemas/accountSettings'
                required:
                  - account
                  - settings
        '404':
          description: Invalid user or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Invalid user or password
                    example: Invalid user or password
                required:
                  - message
  /webhook/register:
    post:
      tags:
        - sign
      summary: Request signature
      description: replaced by /account/register
      operationId: signFileDeprecated#requestSign
      security:
        - basicAuth: []
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: filename
                  description: The name of file to sign
                file:
                  $ref: '#/components/schemas/file'
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
                callback:
                  type: string
                  description: URL that will receive a POST after the document is signed
                  example: 'http://app.test.coop/callback_webhook'
              required:
                - name
                - file
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
    patch:
      tags:
        - sign
      summary: Updates signatures data
      description: Is necessary to inform the UUID of the file and a list of people
      operationId: signFileDeprecated#updateSign
      security:
        - basicAuth: []
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
  /webhook/register/signature:
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: replaced by /sign/register/signature
      operationId: signFileDeprecated#removeSign
      security:
        - basicAuth: []
      deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                users:
                  type: array
                  description: Collection of persons
                  items:
                    type: object
                    description: Person who will deleted
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: UUID not found
  /signature/has-root-cert:
    get:
      tags:
        - admin
      summary: Has root certificate
      description: Replaced by /setting/has-root-cert
      operationId: settingDeprecated#hasRootCert
      security:
        - basicAuth: []
      deprecated: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasRootCert:
                    type: boolean
                    example: true
  /account/me:
    get:
      tags:
        - account
      summary: Who am I
      description: Validates API access data and returns the authenticated user's data.
      operationId: account#me
      security:
        - basicAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/basicAccount'
                  settings:
                    $ref: '#/components/schemas/accountSettings'
                required:
                  - account
                  - settings
        '404':
          description: Invalid user or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Invalid user or password
                    example: Invalid user or password
                required:
                  - message
  '/account/create/{uuid}':
    post:
      tags:
        - account
      summary: Create person account to sign a document
      description: Accounts can only be created to sign documents.
      operationId: account#createToSign
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the person who owns the account
                  example: user@test.coop
                password:
                  type: string
                  format: password
                  description: Password used to authenticate to Nextcloud
                  example: Ultr4S3cretP3ssword!
                signPassword:
                  type: string
                  format: password
                  description: Password used to sign a document
                  example: Ultr4S3cretP3ssword!
              required:
                - email
                - password
      responses:
        '200':
          description: 'Success! When you create a person, they are automatically authenticated.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success message
                    example: Success
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 250
                  pdf:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL to view PDF
                        example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                  filename:
                    type: string
                    example: filename
                    description: The name of file to sign
                  description:
                    type: string
                    nullable: true
                    description: Description for the person who will sign the document
                    example: 'As the company''s CEO, you must sign this contract'
                required:
                  - success
                  - message
                  - action
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
                required:
                  - success
                  - action
                  - message
  /account/files:
    post:
      tags:
        - account
      summary: Save identification documents
      description: Save identification documents to account
      operationId: account#addFiles
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        pattern: '[A-Z0-9_]+'
                        example: PASSPORT
                        default: IDENTIFICATION
                        description: The type code of this file to be attached to the account
                      file:
                        $ref: '#/components/schemas/file'
      responses:
        '200':
          description: Documents have been attached to the account
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                required:
                  - success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Oh no!
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        file:
                          type: integer
                          description: 'Sequential identifier of the file that failed, starting from file zero'
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                          example: Invalid type
  /account/files/approval/list:
    get:
      tags:
        - sign
      summary: List all account files
      description: Identification document files can be associated with each account profile. Here you can list all these files and your status.
      operationId: account#approvalList
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - name: approved
          in: query
          schema:
            type: string
            enum:
              - 'yes'
              - 'no'
              - all
            default: 'no'
          description: Approved files
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      type: object
                      properties:
                        account:
                          $ref: '#/components/schemas/basicAccount'
                        files:
                          type: array
                          description: Files associated with account
                          items:
                            $ref: '#/components/schemas/libresignFile'
                  pagination:
                    $ref: '#/components/schemas/pagination'
  /account/signature:
    post:
      tags:
        - account
      summary: Generates signature key
      description: Generates the personal signature key
      operationId: account#signatureGenerate
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                signPassword:
                  type: string
                  format: password
                  description: Password to pfx file
                  example: MySecretP4ssword!
      responses:
        '200':
          description: Folder where the pfx file was saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  signature:
                    type: string
                    description: Folder where the pfx file was saved
                    example: /LibreSign
                required:
                  - success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Password to sign is mandatory
                    example: Password to sign is mandatory
                  success:
                    type: boolean
                    description: Beep! Failure on generate certificate.
                required:
                  - success
  /account/signature/elements:
    post:
      tags:
        - account
      summary: Generates signature key
      description: Generates the personal signature key
      operationId: account#createSignatureElement
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              description: Collection of visible signature elements
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/signatureElement'
                  - type: object
                    properties:
                      starred:
                        type: boolean
                        default: false
                        description: The main signature
      responses:
        '200':
          description: Visible document saved with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success messagen
                    example: Success
                required:
                  - success
                  - message
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure on generate certificate.
                  message:
                    type: string
                    description: Error pessage
                    example: Invalid file
                required:
                  - success
                  - message
    get:
      tags:
        - account
      summary: Retrieve visible elements
      description: List all elements visible to user profile
      operationId: account#getSignatureElements
      security:
        - basicAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/signatureElement'
                    - type: object
                      properties:
                        id:
                          type: integer
                          minimum: 1
                      required:
                        - id
              example:
                - type: signature
                  file:
                    url: 'http://cloud.test.coop/s/ry384r6t384/download/signature.png'
                  id: 5
                  metadata:
                    text: string
                    dateFormat: string
  '/account/signature/elements/{elementId}':
    get:
      tags:
        - account
      summary: Retrieve visible elements
      description: Get a specific visible element from user profile
      operationId: account#getSignatureElement
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/elementIdParam'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/signatureElement'
                    - type: object
                      properties:
                        id:
                          type: integer
                          minimum: 1
                      required:
                        - id
              example:
                - type: signature
                  file:
                    url: 'http://cloud.test.coop/s/ry384r6t384/download/signature.png'
                  id: 5
                  metadata:
                    text: string
                    dateFormat: string
    patch:
      tags:
        - account
      summary: Edit visible element
      description: Edit elements visible to user profile
      operationId: account#patchSignatureElement
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/elementIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signatureElement'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Visible element upated
                    example: Visible element upated
                required:
                  - success
                  - message
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure on update visible element.
                  message:
                    type: string
                    description: Error pessage
                    example: Invalid type
                required:
                  - success
                  - message
    delete:
      tags:
        - account
      summary: Delete visible element
      description: Delete visible element of user
      operationId: account#deleteSignatureElement
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/elementIdParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Visible element deleted
                    example: Visible element deleted
                required:
                  - success
                  - message
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure on delete visible element.
                  message:
                    type: string
                    description: Error pessage
                    example: This isn't your element
                required:
                  - success
                  - message
  /sign/register:
    post:
      tags:
        - sign
      summary: Request signature
      description: Request that a file be signed by a group of people
      operationId: signFile#requestSign
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: filename
                  description: The name of file to sign
                file:
                  $ref: '#/components/schemas/file'
                visibleElements:
                  description: Visible elements on document
                  allOf:
                    - $ref: '#/components/schemas/signatureElement'
                    - $ref: '#/components/schemas/signatureMetadataElement'
                    - $ref: '#/components/schemas/elementCoordinate'
                    - type: object
                      properties:
                        uid:
                          type: string
                          nullable: true
                          description: Nextcloud user id to assign this visible element.
                          example: johndoe
                      required:
                        - elementId
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
                callback:
                  type: string
                  description: URL that will receive a POST after the document is signed
                  example: 'http://app.test.coop/callback_webhook'
              required:
                - name
                - file
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
    patch:
      tags:
        - sign
      summary: Updates signatures data
      description: Is necessary to inform the UUID of the file and a list of people
      operationId: signFile#updateSign
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                file:
                  $ref: '#/components/schemas/file'
                visibleElements:
                  description: Visible elements on document
                  not:
                    required:
                      - coordinates
                  allOf:
                    - $ref: '#/components/schemas/signatureElement'
                    - $ref: '#/components/schemas/signatureMetadataElement'
                    - $ref: '#/components/schemas/elementCoordinate'
                    - type: object
                      properties:
                        uid:
                          type: string
                          nullable: true
                          description: Nextcloud user id to assign this visible element.
                          example: johndoe
                        elementId:
                          type: integer
                          minimum: 1
                          example: 1
                      required:
                        - elementId
                users:
                  type: array
                  description: Collection of users who must sign the document
                  items:
                    type: object
                    description: Person who will sign
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                      displayName:
                        type: string
                        description: Persons name
                        example: John Doe
                      description:
                        type: string
                        description: Description that will be displayed to the person
                        example: 'As the company''s CEO, you must sign this contract'
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Success
                  data:
                    type: object
                    properties:
                      nodeId:
                        type: integer
                        description: Node id of a Nextcloud file
                        example: 2312
                      uuid:
                        type: string
                        format: uuid
                        description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: User 0 needs an email address
  /sign/register/signature:
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: You can only request exclusion as any sign
      operationId: signFile#deleteSignature
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                  description: Received from sign request
                file:
                  $ref: '#/components/schemas/file'
                users:
                  type: array
                  description: Collection of persons
                  items:
                    type: object
                    description: Person who will deleted
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify user
                        example: user@test.coop
                    required:
                      - email
              required:
                - uuid
                - users
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: UUID not found
  '/sign/uuid/{uuid}':
    post:
      tags:
        - sign
      summary: Sign a file using user file UUUID
      description: The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
      operationId: signFile#signUsingUuid
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/uuidParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  example: Ultr4S3cretP3ssword!
                elements:
                  type: array
                  description: 'Visible elements. Not mandatory, only needed when the document has visible elements and the user has many visible elements associated to profile and don''t has favorited visible element to use.'
                  items:
                    type: object
                    description: Relation between document visible element and visible element of user. This will be used to put on document.
                    properties:
                      documentElementId:
                        type: integer
                        description: Id of visible element on document
                      profileElementId:
                        type: integer
                        description: Id of visible element on document
                    required:
                      - documentElementId
                      - profileElementId
              required:
                - password
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  file:
                    type: object
                    description: LibreSign file
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: LibreSign UUID
                  action:
                    type: integer
                    enum:
                      - 100
                      - 150
                      - 200
                      - 250
                      - 300
                      - 350
                      - 400
                    description: |-
                      Numeric code representing what action should be taken with the response

                      ACTION_REDIRECT = 100
                      ACTION_CREATE_USER = 150
                      ACTION_DO_NOTHING = 200
                      ACTION_SIGN = 250
                      ACTION_SHOW_ERROR = 300
                      ACTION_SIGNED = 350
                      ACTION_CREATE_SIGNATURE_PASSWORD = 400
                    example: 200
                  message:
                    type: string
                    enum:
                      - File signed
                    example: File signed
                required:
                  - success
                  - action
                  - message
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - File already signed by you
                required:
                  - success
                  - action
                  - errors
  '/sign/file_id/{fileId}':
    post:
      tags:
        - sign
      summary: Sign a file using Nextcloud node id
      description: Sign a file using Nextcloud node id.
      operationId: signFile#signUsingFileid
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                  example: Ultr4S3cretP3ssword!
                elements:
                  type: array
                  description: 'Visible elements. Not mandatory, only needed when the document has visible elements and the user has many visible elements associated to profile and don''t has favorited visible element to use.'
                  items:
                    type: object
                    description: Relation between document visible element and visible element of user. This will be used to put on document.
                    properties:
                      documentElementId:
                        type: integer
                        description: Id of visible element on document
                      profileElementId:
                        type: integer
                        description: Id of visible element on document
                    required:
                      - documentElementId
                      - profileElementId
              required:
                - password
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  file:
                    type: object
                    description: LibreSign file
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        description: LibreSign UUID
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  message:
                    type: string
                    example: File signed
                required:
                  - success
                  - action
                  - message
        '422':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - File already signed by you
                required:
                  - success
                  - action
                  - errors
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: You can only request exclusion as any sign
      operationId: signFile#deleteAllSignRequestUsingFileId
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: UUID not found
  '/sign/file_id/{fileId}/{signatureId}':
    delete:
      tags:
        - sign
      summary: Delete sign request
      description: You can only request exclusion as any sign
      operationId: signFile#deleteOneSignRequestUsingFileId
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
        - name: signatureId
          in: path
          description: ID of signature
          required: true
          schema:
            type: integer
            description: Each signature has an ID that is returned on validation endpoints.
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description of the failure that occurred
                    example: Signer not associated to this file
  /file/list:
    get:
      tags:
        - sign
      summary: List all LibreSign files
      description: List all LibreSign files returning all informations about files
      operationId: libreSignFile#list
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/libresignFile'
                  pagination:
                    $ref: '#/components/schemas/pagination'
  '/file/validate/uuid/{uuid}':
    get:
      tags:
        - sign
      summary: Validate a file using UUID
      description: Validate a file using file UUID returning file data.
      operationId: libreSignFile#validateUuid
      parameters:
        - name: uuid
          in: path
          description: File UUID
          required: true
          schema:
            type: string
            format: uuid
            description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        - name: format
          in: query
          description: 'The format of file to view. On default format (pdf) will return file property, if the format is image, will return a property pages with list of all pages converted to images.'
          schema:
            type: string
            enum:
              - pdf
            default: pdf
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  name:
                    type: string
                    example: filename
                  file:
                    type: string
                    description: URL to download signed file
                    example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                  pages:
                    type: array
                    description: |-
                      List with all pages on image format.
                      This property only will be returned when the query param format=image
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: URL of page
                          example: 'http://cloud.test.coop/apps/libresign/img/46d30465-ae11-484b-aad5-327249a1e8ef/page/1'
                      required:
                        - url
                  visibleElements:
                    description: Visible elements on document
                    allOf:
                      - $ref: '#/components/schemas/signatureElement'
                      - $ref: '#/components/schemas/elementCoordinate'
                      - type: object
                        properties:
                          uid:
                            type: string
                            nullable: true
                            description: Nextcloud user id to assign this visible element.
                            example: johndoe
                          elementId:
                            type: integer
                            minimum: 1
                            example: 1
                        required:
                          - elementId
                  signers:
                    type: array
                    items:
                      type: object
                      properties:
                        signed:
                          type: string
                          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                          description: 'Signing date, when signed'
                          example: '2021-12-31 22:45:50'
                          nullable: true
                        displayName:
                          type: string
                          description: The person display name
                          example: John
                        fullName:
                          type: string
                          description: The person full name
                          example: John Doe
                          nullable: true
                        me:
                          type: boolean
                          description: It's me?
                          example: true
                        email:
                          type: string
                          format: email
                          description: Unique email to identify signer. This property will only exist when it is a request made by the person who requested the document to be signed.
                          example: user@test.coop
                        signatureId:
                          type: integer
                          description: ID of signature. Each signature has an ID that is returned on validation endpoints.
                          example: 1
                      required:
                        - signed
                        - displayName
                        - fullName
                        - me
                        - signatureId
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                required:
                  - success
                  - name
                  - file
                  - settings
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - settings
                  - errors
                  - action
  '/file/validate/file_id/{fileId}':
    get:
      tags:
        - sign
      summary: Validate a file using Nextcloud node id
      description: Validate a file using Nextcloud node id.
      operationId: libreSignFile#validateFileId
      parameters:
        - $ref: '#/components/parameters/fileIdParam'
        - name: format
          in: query
          description: 'The format of file to view. On default format (pdf) will return file property, if the format is image, will return a property pages with list of all pages converted to images.'
          schema:
            type: string
            enum:
              - pdf
            default: pdf
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  name:
                    type: string
                    example: filename
                  file:
                    type: string
                    description: URL to download signed file
                    example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
                  pages:
                    type: array
                    description: |-
                      List with all pages on image format.
                      This property only will be returned when the query param format=image
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: URL of page
                          example: 'http://cloud.test.coop/apps/libresign/img/46d30465-ae11-484b-aad5-327249a1e8ef/page/1'
                      required:
                        - url
                  visibleElements:
                    description: Visible elements on document
                    allOf:
                      - $ref: '#/components/schemas/signatureElement'
                      - $ref: '#/components/schemas/elementCoordinate'
                      - type: object
                        properties:
                          uid:
                            type: string
                            nullable: true
                            description: Nextcloud user id to assign this visible element.
                            example: johndoe
                          elementId:
                            type: integer
                            minimum: 1
                            example: 1
                        required:
                          - elementId
                  signers:
                    type: array
                    items:
                      type: object
                      properties:
                        signed:
                          type: string
                          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                          description: 'Signing date, when signed'
                          example: '2021-12-31 22:45:50'
                          nullable: true
                        displayName:
                          type: string
                          description: The person display name
                          example: John
                        fullName:
                          type: string
                          description: The person full name
                          example: John Doe
                          nullable: true
                        me:
                          type: boolean
                          description: It's me?
                          example: true
                        email:
                          type: string
                          format: email
                          description: Unique email to identify signer. This property will only exist when it is a request made by the person who requested the document to be signed.
                          example: user@test.coop
                        signatureId:
                          type: integer
                          description: ID of signature. Each signature has an ID that is returned on validation endpoints.
                          example: 1
                      required:
                        - signed
                        - displayName
                        - fullName
                        - me
                        - signatureId
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                required:
                  - success
                  - name
                  - file
                  - settings
        '404':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Beep! Failure!
                  settings:
                    $ref: '#/components/schemas/signSettings'
                  action:
                    type: integer
                    description: Numeric code representing what action should be taken with the response
                    example: 200
                  errors:
                    type: array
                    items:
                      type: string
                required:
                  - success
                  - settings
                  - errors
                  - action
  /notify/signers:
    post:
      tags:
        - sign
      summary: Notify signers of a file
      description: Notify signers of a file
      operationId: notify#signers
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fileId:
                  type: integer
                  description: Node id of a Nextcloud file
                  example: 2312
                signers:
                  type: array
                  description: Collection of signers
                  items:
                    type: object
                    description: Signer who will notify
                    properties:
                      email:
                        type: string
                        format: email
                        description: Unique email to identify signer
                        example: user@test.coop
                    required:
                      - email
              required:
                - fileId
                - signers
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: Uhuuu! Need true vale.
                  message:
                    type: string
                    description: Success messagen
                    example: Success
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: Oh no!
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - success
                            - info
                            - warning
                            - danger
                          description: Type of message
                        message:
                          type: string
                          description: Text of message
                          example: Invalid type
  /setting/has-root-cert:
    get:
      tags:
        - admin
      summary: Has root certificate
      description: Checks whether the root certificate has been configured by checking the Nextcloud configuration table to see if the root certificate settings have been saved.
      operationId: setting#hasRootCert
      security:
        - basicAuth: []
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasRootCert:
                    type: boolean
                    example: true
  /admin/certificate:
    post:
      tags:
        - admin
      summary: Create root certificate
      description: Create root certificate and enable execution of CFSSL
      operationId: admin#generateCertificate
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commonName:
                  type: string
                  description: Common name
                  example: CommonName
                country:
                  type: string
                  description: Country name
                  example: Brazil
                organization:
                  type: string
                  description: Organization
                  example: Organization
                organizationUnit:
                  type: string
                  description: Organization unit
                  example: organizationUnit
                cfsslUri:
                  type: string
                  description: CFSSL service URL
                  example: 'http://cfssl:8888/api/v1/cfssl/'
                configPath:
                  type: string
                  description: The path that Nextcloud should save the CFSSL configuration files for and that the CFSSL service needs to read to generate the root certificate.
                  example: /cfssl/
              required:
                - commonName
                - country
                - organization
                - organizationUnit
                - cfsslUri
                - configPath
      responses:
        '200':
          description: 'If the response is successful, it is because the settings have been saved and the root certificate has been generated.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
                    description: CFSSL server is up?
                required:
                  - success
                example:
                  success: true
        '401':
          description: Request failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - false
                    description: CFSSL server is up?
                  message:
                    type: array
                    description: List of failures that occurred
                required:
                  - success
                  - message
                example:
                  success: false
                  message:
                    - parameter 'cfsslUri' is required!
    get:
      tags:
        - admin
      summary: Get root certificate
      description: Get root certificate settings
      operationId: admin#loadCertificate
      security:
        - basicAuth: []
      responses:
        '200':
          description: The certificate settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  commonName:
                    type: string
                    description: Common name
                    example: CommonName
                  country:
                    type: string
                    description: Country name
                    example: Brazil
                  organization:
                    type: string
                    description: Organization
                    example: Organization
                  organizationUnit:
                    type: string
                    description: Organization unit
                    example: organizationUnit
                  cfsslUri:
                    type: string
                    description: CFSSL service URL
                    example: 'http://cfssl:8888/api/v1/cfssl/'
                  configPath:
                    type: string
                    description: The path that Nextcloud should save the CFSSL configuration files for and that the CFSSL service needs to read to generate the root certificate.
                    example: /cfssl/
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    pageParam:
      name: page
      in: query
      schema:
        type: integer
        minimum: 0
      description: The number of page to return
    limitParam:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        default: 15
      description: The number of page to return
    fileIdParam:
      name: fileId
      in: path
      description: Node id of a Nextcloud file
      required: true
      schema:
        type: string
        description: Node id of a Nextcloud file.
        example: '564'
    uuidParam:
      name: uuid
      in: path
      description: File UUID
      required: true
      schema:
        type: string
        format: uuid
        description: UUID user file identifier. The user UUID is what the person receives via email when asked to sign. This is not the file UUID.
    elementIdParam:
      name: elementId
      in: path
      description: ID of visible element
      required: true
      schema:
        type: integer
        description: Each element has an ID that is returned on validation endpoints.
  schemas:
    basicAccount:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
          description: Who requested that the file be signed?
          example: John Doe
        uid:
          type: string
          nullable: true
          description: Nextcloud user id of who requested the file to be signed.
          example: johndoe
    accountSettings:
      type: object
      properties:
        canRequestSign:
          type: boolean
          description: 'Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.'
          example: true
        hasSignatureFile:
          type: boolean
          description: Has signature file.
          example: true
    signSettings:
      type: object
      properties:
        canRequestSign:
          type: boolean
          description: 'Person can request sign a new file. To authorize, the person must belong to a group defined in the LibreSign settings.'
          example: true
        hasSignatureFile:
          type: boolean
          description: Has signature file.
          example: true
        canSign:
          type: boolean
          description: Can request sign this file
          example: true
    libresignFile:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: File identifier. It is necessary to keep it because it must be used to update or delete a signature request and will also be used in the callback request.
        name:
          type: string
          example: filename
          description: The name of file to sign
        callback:
          type: string
          description: URL that will receive a POST after the document is signed
          nullable: true
          example: 'http://app.test.coop/callback_webhook'
        status:
          type: string
          enum:
            - signed
            - pending
            - disabled
            - no signers
        status_date:
          type: string
          format: date-time
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
          nullable: true
          description: Last status date
          example: '2021-12-31 22:45:50'
        request_date:
          type: string
          format: date-time
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
          nullable: true
          description: Date the file was requested to be signed
          example: '2021-12-31 22:45:50'
        requested_by:
          $ref: '#/components/schemas/basicAccount'
        file:
          type: object
          nullable: true
          properties:
            type:
              type: string
              enum:
                - pdf
              description: Type of file
              example: pdf
            url:
              type: string
              description: URL to view PDF
              example: 'http://cloud.test.coop/apps/libresign/pdf/46d30465-ae11-484b-aad5-327249a1e8ef'
            nodeId:
              type: integer
              description: Node id of a Nextcloud file
              example: 2312
          required:
            - type
        signers:
          type: array
          description: Collection of users who must sign the document
          items:
            type: object
            description: Person who will sign
            properties:
              email:
                type: string
                format: email
                description: Unique email to identify user
                example: user@test.coop
              me:
                type: boolean
                description: It's me?
                example: true
              displayName:
                type: string
                nullable: true
                description: Persons name
                example: John Doe
              uid:
                type: string
                nullable: true
                description: Nextcloud user id of who requested the file to be signed when the person created account.
                example: johndoe
              description:
                type: string
                nullable: true
                description: Description that will be displayed to the person
                example: 'As the company''s CEO, you must sign this contract'
              sign_date:
                type: string
                format: date-time
                pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                nullable: true
                description: Date the file was signed
                example: '2021-12-31 22:45:50'
              request_sign_date:
                type: string
                format: date-time
                pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
                description: Date the signature was requested
                example: '2021-12-31 22:45:50'
              signatureId:
                type: integer
                description: ID of signature. Each signature has an ID that is returned on validation endpoints.
                example: 1
            required:
              - email
              - request_sign_date
      required:
        - uuid
        - name
        - status
    file:
      type: object
      description: File object. Use one of these types
      properties:
        url:
          type: string
          description: URL of file
          example: 'http://cloud.test.coop/s/ry384r6t384/download/test_small.pdf'
        fileId:
          type: integer
          description: Node id of a Nextcloud file
          example: 2312
        base64:
          type: string
          format: base64
          description: base64 of PDF file content
          example: dGVzdA==
      example:
        url: 'http://cloud.test.coop/s/ry384r6t384/download/test_small.pdf'
    pagination:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          description: Total number of records
          example: 300
        current:
          type: string
          minimum: 1
          nullable: true
          description: URL of current page
          example: /file/list?page=2&length=15
        next:
          type: string
          nullable: true
          description: URL of next page
          example: /file/list?page=3
        prev:
          type: string
          nullable: true
          description: URL of previous page
          example: /file/list?page=1
        last:
          type: string
          nullable: true
          description: URL of last page
          example: /file/list?page=20
        first:
          type: string
          nullable: true
          description: URL of first page
          example: /file/list?page=1
      required:
        - total
        - current
        - next
        - prev
        - last
        - first
    signatureElement:
      description: Visible elements to associate with the document
      type: object
      example:
        type: signature
        file:
          url: 'http://cloud.test.coop/s/ry384r6t384/download/signature.png'
      properties:
        type:
          type: string
          minLength: 1
          enum:
            - signature
            - initial
            - date
            - datetime
            - text
          example: signature
        file:
          $ref: '#/components/schemas/file'
      required:
        - type
    signatureMetadataElement:
      description: Metadata of visible elements to associate with the document
      type: object
      example:
        metadata:
          text: Lorem ipsum
      properties:
        metadata:
          type: object
          properties:
            text:
              type: string
              minLength: 1
            dateFormat:
              type: string
              minLength: 1
    elementCoordinate:
      description: Coortinates of a visible element on PDF
      type: object
      x-examples:
        example-1:
          coordinates:
            page: 0
            urx: 0
            ury: 0
            llx: 0
            lly: 0
      properties:
        coordinates:
          type: object
          properties:
            page:
              type: integer
              example: 0
              minimum: 0
              default: 1
            urx:
              type: integer
              description: upper right corner postion on X-axe of visible signature
              minimum: 0
              example: 0
              default: 0
            ury:
              type: integer
              description: upper right corner postion on Y-axe of visible signature
              minimum: 0
              example: 0
              default: 0
            llx:
              type: integer
              description: lower left corner postion on X-axe of visible signature
              minimum: 0
              example: 0
              default: 0
            lly:
              type: integer
              description: lower left corner postion on Y-axe of visible signature
              minimum: 0
              example: 0
              default: 0
      required:
        - coordinates
